{"version":3,"sources":["components/Button.tsx","components/Header.tsx","components/Votes.js","components/Spinner.js","apiServices.tsx","components/CardFilm.js","components/MySelect.js","pages/ListOfFilms.js","pages/FilmPage.tsx","components/LogIn.js","components/SignUp.js","App.tsx","index.tsx"],"names":["Button","children","className","classes","Header","setIsModalVisible","setIsSignUpWindowVisible","to","onClick","Votes","Spinner","isVisible","useState","color","override","css","size","baseUrl","loadFilms","genres","a","searchParams","URLSearchParams","genre","append","url","fetch","response","json","films","getFilm","id","then","res","createUser","username","email","password","body","method","headers","JSON","stringify","user","CardFilm","setFilms","isLoading","setIsLoading","useEffect","map","film","src","poster_url","alt","title","title_ru","release_year","country","director","actors","slice","actor","photo_url","options","value","label","MySelect","setSelectedGenres","type","for","disabled","isMulti","classNamePrefix","onChange","o","ListOfFilms","setGenres","FilmPage","useParams","useQuery","data","description","LogInWindow","role","aria-modal","autoComplete","name","SignUpWindow","userName","values","setValues","submitted","setSubmitted","placeholder","e","target","preventDefault","console","log","App","isModalVisible","isSignUpWindowVisible","path","queryClient","QueryClient","rootElement","document","getElementById","ReactDOM","render","QueryClientProvider","client"],"mappings":"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","file":"static/js/main.1620ca8b.chunk.js","sourcesContent":["import \"./Button.css\";\n\nconst Button = ({\n  children,\n  className,\n}: {\n  children: any;\n  className: string;\n}) => {\n  const classes = `btn ${className}`;\n\n  return <button className={classes}>{children}</button>;\n};\n\nexport default Button;\n","import { Link } from \"react-router-dom\";\nimport { GiFilmSpool } from \"react-icons/gi\";\nimport Button from \"./Button\";\nimport \"./Header.css\";\n\nconst Header = ({\n  setIsModalVisible,\n  setIsSignUpWindowVisible,\n}: {\n  setIsModalVisible: (val: boolean) => void;\n  setIsSignUpWindowVisible: (val: boolean) => void;\n}) => {\n  const handleShow = () => setIsModalVisible(true);\n  const handleShowSignUpWindow = () => setIsSignUpWindowVisible(true);\n\n  return (\n    <>\n      <div className=\"background-line\">\n        <div className=\"container\">\n          <header className=\"header-container \">\n            <div className=\"logo\">\n              <Link to=\"/\" className=\"navbar-logo\">\n                <GiFilmSpool className=\"navbar-icon\" />\n                <h4 className=\"nav-title\">\n                  Rate<span className=\"highlight\">Film</span>\n                </h4>\n              </Link>\n            </div>\n\n            <nav className=\"main-nav\">\n              <ul className=\"nav-list\">\n                <li>\n                  <Link to=\"/\" className=\"btn-link\">\n                    <Button className=\"btn-primary\">List Of Films</Button>\n                  </Link>\n                </li>\n                <li>\n                  <button\n                    className=\"btn btn-color\"\n                    onClick={handleShowSignUpWindow}\n                  >\n                    Sign Up\n                  </button>\n                </li>\n                <li>\n                  <button className=\"btn btn-color\" onClick={handleShow}>\n                    Log In\n                  </button>\n                </li>\n              </ul>\n            </nav>\n          </header>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Header;\n","import React from \"react\";\nimport { FiThumbsUp } from \"react-icons/fi\";\nimport \"./Votes.css\";\n\nconst Votes = () => {\n  return (\n    <div className=\"vote-container\">\n      <div className=\"vote-wrapper\">\n        <h3 className=\"percentage\">35%</h3>\n        <div className=\"icon-like\">\n          <FiThumbsUp />\n        </div>\n        <div className=\"count-votes\">\n          <p>170 votes</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Votes;\n","import React, { useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst Spinner = ({ isVisible }) => {\n  let [color, setColor] = useState(\"#f9c64e\");\n\n  const override = css`\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-color: red;\n    height: 500px;\n  `;\n\n  return (\n    <div>\n      <BeatLoader css={override} size={30} color={color} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import { Film } from \"./interfaces/film\";\n\nconst baseUrl = \"https://rfilm.mswan.ru/api/v1\";\n\nexport const loadFilms = async (genres: string[]) => {\n  const searchParams = new URLSearchParams();\n\n  for (const genre of genres) {\n    searchParams.append(\"genre\", genre);\n  }\n\n  const url = `${baseUrl}/films/?${searchParams}`;\n\n  const response = await fetch(url);\n  const films = await response.json();\n  return films;\n};\n\nexport const getFilm = async (id: string): Promise<Film> => {\n  const url = `${baseUrl}/films/${id}`;\n  return fetch(url).then((res) => res.json());\n};\n\nexport const createUser = async (\n  username: string,\n  email: string,\n  password: string\n) => {\n  const body = {\n    username: username,\n    email: email,\n    password: password,\n  };\n  const url = `${baseUrl}/users/`;\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n  const user = await response.json();\n  return user;\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Votes from \"./Votes\";\nimport Spinner from \"../components/Spinner\";\nimport { loadFilms } from \"../apiServices\";\nimport \"./CardFilm.css\";\n\n// import { snakeToCamel } from \"../helpers\";\n\nconst CardFilm = ({ genres }) => {\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadFilms(genres).then((films) => {\n      setFilms(films);\n      setIsLoading(false);\n    });\n  }, [genres]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Spinner isVisible={isLoading} />\n      ) : (\n        <>\n          <div className=\"cards-container\">\n            {films.map((film) => (\n              <div>\n                <Link className=\"link\" to={`/films/${film.id}`}>\n                  <div className=\"card-film\" key={film.id}>\n                    <div className=\"poster\">\n                      <img\n                        key={film.id}\n                        src={film.poster_url}\n                        alt=\"poster film\"\n                        className=\"card-header-icon\"\n                      />\n                    </div>\n                    <div className=\"content-film\">\n                      <div className=\"film-description\">\n                        <h2 className=\"film-title\">{film.title}</h2>\n                        <p className=\"translate-film-name\">\n                          {film.title_ru}, {film.release_year}\n                        </p>\n                        <p className=\"country\">\n                          {film.country}, {film.genre}\n                        </p>\n                        <p className=\"film-director\">\n                          Directed by {\"\"}\n                          <span className=\"director\">{film.director}</span>\n                        </p>\n                      </div>\n\n                      <div>\n                        <p>Actors:</p>\n                        <div className=\"image-wrapper\">\n                          {film.actors.slice(0, 4).map((actor) => (\n                            <img\n                              key={actor.id}\n                              className=\"actors\"\n                              alt=\"actors\"\n                              src={actor.photo_url}\n                            />\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div>\n                      <Votes />\n                    </div>\n                  </div>\n                </Link>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\nexport default CardFilm;\n","import Select from \"react-select\";\nimport \"./MySelect.css\";\n\nconst options = [\n  { value: \"action\", label: \"Action\" },\n  { value: \"mystery\", label: \"Mystery\" },\n  { value: \"thriller\", label: \"Thriller\" },\n  { value: \"comedy\", label: \"Comedy\" },\n  { value: \"family\", label: \"Family\" },\n  { value: \"history\", label: \"History\" },\n  { value: \"sci-fi\", label: \"Sci-Fi\" },\n  { value: \"war\", label: \"War\" },\n  { value: \"adventure\", label: \"Adventure\" },\n  { value: \"crime\", label: \"Crime\" },\n  { value: \"fantasy\", label: \"Fantasy\" },\n  { value: \"horror\", label: \"Horror\" },\n  { value: \"animation\", label: \"Animation\" },\n  { value: \"documentary\", label: \"Documentary\" },\n  { value: \"biography\", label: \"Biography\" },\n  { value: \"drama\", label: \"Drama\" },\n  { value: \"musical\", label: \"Musical\" },\n];\n\nconst MySelect = ({ setSelectedGenres }) => {\n  return (\n    <div className=\"select-container\">\n      <div className=\"wrapper-checkbox\">\n        <input type=\"checkbox\" id=\"checkbox1\" />\n        <label for=\"checkbox1\" disabled>\n          most popular\n        </label>\n      </div>\n      <Select\n        // value={selectedValue}\n        options={options}\n        isMulti\n        className=\"basic-multi-select\"\n        classNamePrefix=\"select\"\n        onChange={(options) => {\n          setSelectedGenres(options.map((o) => o.value));\n        }}\n      />\n    </div>\n  );\n};\n\nexport default MySelect;\n","import React, { useState } from \"react\";\nimport CardFilm from \"../components/CardFilm\";\n\nimport MySelect from \"../components/MySelect\";\n\nconst ListOfFilms = () => {\n  const [genres, setGenres] = useState([]);\n\n  return (\n    <>\n      <MySelect setSelectedGenres={setGenres} />\n      <CardFilm genres={genres} />\n    </>\n  );\n};\nexport default ListOfFilms;\n","import { useQuery } from \"react-query\";\nimport { useParams, Link } from \"react-router-dom\";\n\nimport { getFilm } from \"../apiServices\";\nimport { Film } from \"../interfaces/film\";\nimport \"./FilmPage.css\";\n\nconst FilmPage = () => {\n  const { id }: { id: any } = useParams();\n\n  const { isLoading, data } = useQuery<Film>(\"film\", () => getFilm(id));\n\n  return (\n    <div>\n      <Link to=\"/\" className=\"btn--back\">\n        <span>Back</span>\n      </Link>\n      {!isLoading && data ? (\n        <div className=\"film-page-container\">\n          <div className=\"page-film-poster-wrapper\">\n            <img\n              className=\"page-film-poster\"\n              src={data.poster_url}\n              alt=\"film poster\"\n            />\n          </div>\n          <div className=\"page-film-content\">\n            <h2 className=\"page-film-title\">{data.title}</h2>\n            <h3>\n              {data.title_ru}, {data.release_year}\n            </h3>\n            <p className=\"page-film-country\">\n              {data.country}, {data.genre}\n            </p>\n            <p className=\"film-page-description\">{data.description}</p>\n\n            <div>\n              <p>Actors:</p>\n              <div className=\"\">\n                {data.actors.map((actor) => (\n                  <img\n                    key={actor.id}\n                    className=\"actors\"\n                    alt=\"actors\"\n                    src={actor.photo_url}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h2>Loading...</h2>\n      )}\n    </div>\n  );\n};\n\nexport default FilmPage;\n","import React from \"react\";\nimport \"./LogIn.css\";\n\nconst LogInWindow = ({ setIsModalVisible }) => {\n  const handleClose = () => setIsModalVisible(false);\n  return (\n    <>\n      <div className=\"modal-background\" role=\"dialog\" aria-modal=\"true\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title\">SIGN IN</h3>\n            <button className=\"modal-close-btn\" onClick={handleClose}></button>\n          </div>\n          <div className=\"login-form-body\">\n            <form>\n              <ul>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Email address</label>\n                  <input\n                    className=\"form-field\"\n                    type=\"email\"\n                    autoComplete=\"on\"\n                    name=\"email\"\n                  />\n                </li>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    className=\"form-field\"\n                    type=\"password\"\n                    autoComplete=\"on\"\n                    name=\"password\"\n                  />\n                </li>\n                <li className=\"form-group\">\n                  <button className=\"login-submit-btn\" type=\"submit\">\n                    LOG IN\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n          <footer className=\"modal-footer\">\n            <p className=\"modal-footer-paragraph\">\n              Don't have an account?\n              <button className=\"login-footer-btn\">SIGN UP HERE</button>\n            </p>\n          </footer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LogInWindow;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createUser } from \"../apiServices\";\nimport \"./SignUp.css\";\n\nconst SignUpWindow = ({ setIsSignUpWindowVisible }) => {\n  const [values, setValues] = useState({\n    userName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [submitted, setSubmitted] = useState(false);\n  // const [users, setUsers] = useState([])\n  // const [formData, setFormData] = useState('')\n\n  // const createUser = () => {\n  //   const body = {\n  //     username: values.userName,\n  //     email: values.email,\n  //     password: values.password,\n  //   };\n  //   fetch(\"http://rfilm.mswan.ru/api/v1/users\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(body),\n  //   })\n  //     .then((res) => res.json())\n  //     .then((result) => console.log(result))\n  //     .catch((err) => console.log(\"ERROR\"));\n  // };\n\n  const handleCloseSignUp = () => setIsSignUpWindowVisible(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(values.userName, values.email, values.password);\n    createUser(values.userName, values.email, values.password);\n    setSubmitted(true);\n  };\n\n  return (\n    <>\n      <div className=\"signup-modal-background\" role=\"dialog\" aria-modal=\"true\">\n        <div className=\"signup-modal-content\">\n          <div className=\"signup-modal-header\">\n            <h3 className=\"signup-modal-title\">SIGN UP FOR RATE FILM</h3>\n            <button\n              className=\"signup-modal-close-btn\"\n              onClick={handleCloseSignUp}\n            ></button>\n          </div>\n          <div className=\"signup-form-body\">\n            <form>\n              <ul>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Your name on the website</label>\n                  <input\n                    className=\"form-field\"\n                    type=\"text\"\n                    name=\"userName\"\n                    placeholder=\"Jonny\"\n                    value={values.userName}\n                    onChange={(e) =>\n                      setValues({ ...values, userName: e.target.value })\n                    }\n                  />\n                </li>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Email address</label>\n                  <input\n                    className=\"form-field\"\n                    type=\"email\"\n                    autoComplete=\"on\"\n                    name=\"email\"\n                    placeholder=\"jonny@gmail.com\"\n                    value={values.email}\n                    onChange={(e) =>\n                      setValues({ ...values, email: e.target.value })\n                    }\n                  />\n                </li>\n\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    className=\"form-field\"\n                    type=\"password\"\n                    autoComplete=\"on\"\n                    name=\"password\"\n                    value={values.password}\n                    onChange={(e) =>\n                      setValues({ ...values, password: e.target.value })\n                    }\n                  />\n                </li>\n                {submitted && !values.password ? (\n                  <span>Forgot your password???</span>\n                ) : null}\n                <li className=\"form-group\">\n                  <button\n                    className=\"login-submit-btn\"\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                  >\n                    CREATE YOUR ACCOUNT\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n          <footer className=\"signup-modal-footer\">\n            <p className=\"signup-modal-footer-paragraph\">\n              Already have an account?\n              <button className=\"signup-footer-link\">LOG IN HERE</button>\n            </p>\n            <p className=\"policy-text\">\n              By creating an account, you agree to the{\" \"}\n              <Link\n                to=\"https://www.fandango.com/policies/privacy-policy\"\n                className=\"signup-footer-link small\"\n              >\n                Privacy Policy\n              </Link>{\" \"}\n              and the{\" \"}\n              <Link\n                to=\"https://www.fandango.com/policies/terms-and-policies\"\n                className=\"signup-footer-link small\"\n              >\n                Terms and Policies{\" \"}\n              </Link>\n            </p>\n          </footer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SignUpWindow;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport ListOfFilms from \"./pages/ListOfFilms\";\nimport FilmPage from \"./pages/FilmPage\";\nimport LogInWindow from \"./components/LogIn\";\nimport SignUpWindow from \"./components/SignUp\";\n\nfunction App() {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isSignUpWindowVisible, setIsSignUpWindowVisible] = useState(false);\n\n  return (\n    <Router>\n      {isModalVisible && <LogInWindow setIsModalVisible={setIsModalVisible} />}\n      {isSignUpWindowVisible && (\n        <SignUpWindow setIsSignUpWindowVisible={setIsSignUpWindowVisible} />\n      )}\n\n      <Header\n        setIsModalVisible={setIsModalVisible}\n        setIsSignUpWindowVisible={setIsSignUpWindowVisible}\n      />\n      <div className=\"container\">\n        <Switch>\n          <Route path=\"/films/:id\">\n            <FilmPage />\n          </Route>\n\n          <Route path=\"/\">\n            <ListOfFilms />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <App />\n  </QueryClientProvider>,\n  rootElement\n);\n"],"sourceRoot":""}