{"version":3,"sources":["localStorageUserServices.tsx","apiServices.tsx","components/buttons/SignUpButton.js","components/buttons/LogInButton.js","components/profile/ThumbMenuProfile.tsx","components/buttons/Button.tsx","components/Header.tsx","components/Votes.tsx","components/Spinner.js","components/CardFilm.js","components/MySelect.js","pages/ListOfFilms.js","pages/FilmPage.tsx","components/profile/MovieRatings.js","components/TextField.js","components/profile/AccountSettings.js","pages/UserProfilePage.js","components/LogIn.js","components/SignUp.js","App.tsx","index.tsx"],"names":["getUserToken","rawToken","localStorage","getItem","JSON","parse","baseUrl","loadFilms","genres","token","a","searchParams","URLSearchParams","genre","append","url","headers","Authorization","access_token","fetch","response","json","films","statusCode","status","data","getFilm","id","film","createUser","username","email","password","body","method","stringify","userOrError","loginUser","formData","FormData","userToken","getUser","user","changeDisplayName","displayName","display_name","rateFilm","filmId","score","film_id","rating","SignUpButton","setIsSignUpWindowVisible","className","onClick","LogInButton","setIsModalVisible","ThumbMenuProfile","alt","src","to","removeItem","logOutUser","href","Button","children","classes","Header","useState","setUser","isLoading","setIsLoading","useEffect","then","Votes","innerRating","setInnerRating","handleSubmit","newVoteValue","newRating","user_vote","res","alert","disabled","score_with_sign","votes_count","Spinner","isVisible","color","override","css","size","CardFilm","setFilms","map","poster_url","title","title_ru","release_year","country","director","actors","slice","actor","photo_url","options","value","label","MySelect","setSelectedGenres","type","for","isMulti","classNamePrefix","onChange","o","ListOfFilms","setGenres","FilmPage","useParams","useQuery","description","MovieRatings","TextField","onSave","icon","loading","error","props","saving","setSaving","setSaved","saveError","setSaveError","lastValue","setLastValue","Fragment","Form","Input","onBlur","e","val","target","AccountSettings","Container","width","placeholder","newName","r","UserProfile","toggleState","setToggleState","toggleTab","index","LogInWindow","values","setValues","setSubmitted","formError","setFormError","role","aria-modal","autoComplete","name","preventDefault","tokenAsString","setItem","saveUserToken","detail","defaultFormErrors","SignUpWindow","formErrors","setFormErrors","newErrors","loc","msg","App","isModalVisible","isSignUpWindowVisible","LogIn","SignUp","path","queryClient","QueryClient","rootElement","document","getElementById","ReactDOM","render","QueryClientProvider","client"],"mappings":"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","file":"static/js/main.04930522.chunk.js","sourcesContent":["import { User, AccessToken } from \"./interfaces/user\";\n\nexport const saveUser = (user: User) => {\n  const userAsString = JSON.stringify(user);\n\n  localStorage.setItem(\"user\", userAsString);\n};\n\nexport const saveUserToken = (token: AccessToken) => {\n  const tokenAsString = JSON.stringify(token);\n\n  localStorage.setItem(\"userToken\", tokenAsString);\n};\n\nexport const getUserToken = (): AccessToken => {\n  const rawToken = localStorage.getItem(\"userToken\");\n  return rawToken ? JSON.parse(rawToken) : null;\n};\n\nexport const logOutUser = (token: AccessToken) => {\n  const tokenAsString = JSON.stringify(token);\n\n  localStorage.removeItem(\"userToken\");\n};\n","import { Film } from \"./interfaces/film\";\nimport { User, UserCreateErrorResponse, AccessToken } from \"./interfaces/user\";\nimport { Rating } from \"./interfaces/film\";\n\nconst baseUrl = \"https://rfilm.mswan.ru/api/v1\";\n\nexport interface ApiResponse<T> {\n  statusCode: number;\n  data: T;\n}\n\nexport const loadFilms = async (\n  genres: string[],\n  token?: AccessToken\n): Promise<ApiResponse<Film[]>> => {\n  const searchParams = new URLSearchParams();\n\n  for (const genre of genres) {\n    searchParams.append(\"genre\", genre);\n  }\n\n  const url = `${baseUrl}/films?${searchParams}`;\n  let headers = {};\n\n  if (token) {\n    headers = { Authorization: `Bearer ${token.access_token}` };\n  }\n\n  const response = await fetch(url, { headers: headers });\n  const films = (await response.json()) as Film[];\n\n  return {\n    statusCode: response.status,\n    data: films,\n  };\n};\n\nexport const getFilm = async (id: string, token?: AccessToken): Promise<ApiResponse<Film>> => {\n  const url = `${baseUrl}/films/${id}`;\n\n  let headers = {};\n\n  if (token) {\n    headers = { Authorization: `Bearer ${token.access_token}` };\n  }\n\n  const response = await fetch(url, {\n    headers: headers,\n  });\n  const film = (await response.json()) as Film;\n\n  return {\n    statusCode: response.status,\n    data: film,\n  };\n  \n};\n\nexport const createUser = async (\n  username: string,\n  email: string,\n  password: string\n): Promise<ApiResponse<User | UserCreateErrorResponse>> => {\n  const body = {\n    username: username,\n    email: email,\n    password: password,\n  };\n\n  const url = `${baseUrl}/users`;\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\n  const userOrError = await response.json();\n\n  return {\n    statusCode: response.status,\n    data: userOrError,\n  };\n};\n\nexport const loginUser = async (\n  username: string,\n  password: string\n): Promise<ApiResponse<AccessToken>> => {\n  const url = `${baseUrl}/users/token`;\n\n  let formData = new FormData();\n  formData.append(\"username\", username);\n  formData.append(\"password\", password);\n\n  const response = await fetch(url, {\n    body: formData,\n    method: \"post\",\n  });\n\n  const userToken = (await response.json()) as AccessToken;\n\n  return {\n    statusCode: response.status,\n    data: userToken,\n  };\n};\n\nexport const getUser = async (\n  token: AccessToken\n): Promise<ApiResponse<User>> => {\n  const url = `${baseUrl}/users/me`;\n  // const headers = {'Authorization': `Bearer ${token.access_token}`}\n\n  const response = await fetch(url, {\n    headers: { Authorization: `Bearer ${token.access_token}` },\n  });\n  const user = (await response.json()) as User;\n\n  return {\n    statusCode: response.status,\n    data: user,\n  };\n};\n\nexport const changeDisplayName = async (\n  displayName: string,\n  token: AccessToken\n): Promise<ApiResponse<User | UserCreateErrorResponse>> => {\n  const body = {\n    display_name: displayName,\n  };\n\n  const url = `${baseUrl}/users/me`;\n\n  const response = await fetch(url, {\n    method: \"PATCH\",\n    headers: {\n      Authorization: `Bearer ${token.access_token}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\n  const userOrError = await response.json();\n\n  return {\n    statusCode: response.status,\n    data: userOrError,\n  };\n};\n\nexport const rateFilm = async (\n  filmId: number,\n  score: number,\n  token: AccessToken\n): Promise<ApiResponse<Rating>> => {\n  const url = `${baseUrl}/rating`;\n\n  const body = {\n    film_id: filmId,\n    score: score,\n  };\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token.access_token}`,\n    },\n    body: JSON.stringify(body),\n  });\n\n  const rating = (await response.json()) as Rating;\n\n  return {\n    statusCode: response.status,\n    data: rating,\n  };\n};\n","import React from \"react\";\nimport \"./SignUpButton.scss\";\n\nconst SignUpButton = ({ setIsSignUpWindowVisible }) => {\n  const handleShowSignUpWindow = () => setIsSignUpWindowVisible(true);\n\n  return (\n    <>\n      <button className=\"btn btn-primary\" onClick={handleShowSignUpWindow}>\n        Sign Up\n      </button>\n    </>\n  );\n};\n\nexport default SignUpButton;\n","import React from \"react\";\nimport \"./LogInButton.scss\";\n\nconst LogInButton = ({ setIsModalVisible }) => {\n  const handleShow = () => {\n    setIsModalVisible(true);\n  };\n\n  return (\n    <>\n      <button className=\"btn btn-primary\" onClick={handleShow}>\n        Log In\n      </button>\n    </>\n  );\n};\n\nexport default LogInButton;\n","import { logOutUser } from \"../../localStorageUserServices\";\nimport { Link } from \"react-router-dom\";\nimport { RiArrowDropDownFill } from \"react-icons/ri\";\nimport { User } from \"../../interfaces/user\";\nimport { AccessToken } from \"../../interfaces/user\";\nimport \"./ThumbMenuProfile.scss\";\n\nconst ThumbMenuProfile = (\n  { user }: { user: User },\n  { token }: { token: AccessToken }\n) => {\n  const handleLogOut = () => logOutUser(token);\n\n  return (\n    <>\n      <div className=\"wrapper-thumb-menu\">\n        <img\n          className=\"thumb-avatar\"\n          alt=\"user-avatar\"\n          src=\"https://images.fandango.com/cms/assets/a2f0b9d0-cf84-11eb-a507-3be98bb99253--actordefaulttmb.gif\"\n        />\n        <span className=\"thumb-menu-username\">{user.username}</span>\n        <p className=\"dropdown-arrow\">\n          <RiArrowDropDownFill />\n        </p>\n      </div>\n      <ul className=\"list-dropdown-items\">\n        <li className=\"dropdown-item\">\n          <Link className=\"dropdown-link\" to=\"/profile\">\n            Profile\n          </Link>\n        </li>\n        <li className=\"dropdown-item\">\n          <a className=\"dropdown-link\" onClick={handleLogOut} href=\"/\">\n            Log out\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default ThumbMenuProfile;\n","import \"./Button.scss\";\n\nconst Button = ({\n  children,\n  className,\n}: {\n  children: any;\n  className: string;\n}) => {\n  const classes = `btn ${className}`;\n\n  return <button className={classes}>{children}</button>;\n};\n\nexport default Button;\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { GiFilmSpool } from \"react-icons/gi\";\nimport { getUserToken } from \"../localStorageUserServices\";\nimport { getUser } from \"../apiServices\";\nimport SignUpButton from \"../components/buttons/SignUpButton\";\nimport LogInButton from \"../components/buttons/LogInButton\";\nimport ThumbMenuProfile from \"./profile/ThumbMenuProfile\";\nimport { User } from \"../interfaces/user\";\nimport Button from \"./buttons/Button\";\nimport \"./Header.scss\";\n\nconst Header = ({\n  setIsModalVisible,\n  setIsSignUpWindowVisible,\n}: {\n  setIsModalVisible: (val: boolean) => void;\n  setIsSignUpWindowVisible: (val: boolean) => void;\n}) => {\n  const [user, setUser] = useState<User | null>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const token = getUserToken();\n\n    if (!token) {\n      setUser(null);\n      setIsLoading(false);\n      return;\n    }\n\n    getUser(token).then((user) => {\n      setUser(user.data);\n\n      setIsLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    <></>;\n  }\n  return (\n    <>\n      <div className=\"header-background-line\">\n        <div className=\"main-container\">\n          <header className=\"header-container\">\n            <div className=\"header-logo\">\n              <Link to=\"/\" className=\"navbar-logo\">\n                <GiFilmSpool className=\"navbar-icon\" />\n                <h4 className=\"navbar-title\">\n                  Rate<span className=\"highlight\">Film</span>\n                </h4>\n              </Link>\n            </div>\n\n            <nav className=\"main-nav\">\n              {!user ? (\n                <ul className=\"nav-list\">\n                  <li className=\"nav-list-item\">\n                    <Link to=\"/\" className=\"btn-link\">\n                      <Button className=\"btn-primary\">List Of Films</Button>\n                    </Link>\n                  </li>\n                  <li className=\"nav-list-item\">\n                    <SignUpButton\n                      setIsSignUpWindowVisible={setIsSignUpWindowVisible}\n                    />\n                  </li>\n                  <li className=\"nav-list-item\">\n                    <LogInButton setIsModalVisible={setIsModalVisible} />\n                  </li>\n                </ul>\n              ) : (\n                <ul className=\"nav-list\">\n                  <li className=\"nav-list-item\">\n                    <Link to=\"/\" className=\"btn-link\">\n                      <Button className=\"btn-primary\">List Of Films</Button>\n                    </Link>\n                  </li>\n                  <li className=\"nav-list-item\">\n                    <ThumbMenuProfile user={user} />\n                  </li>\n                </ul>\n              )}\n            </nav>\n          </header>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Header;\n","import { useEffect, useState } from \"react\";\nimport { FiThumbsUp, FiThumbsDown } from \"react-icons/fi\";\nimport { MdThumbUp, MdThumbDown } from \"react-icons/md\";\nimport { rateFilm } from \"../apiServices\";\nimport { Rating } from \"../interfaces/film\";\nimport { getUserToken } from \"../localStorageUserServices\";\nimport \"./Votes.scss\";\n\nconst Votes = ({ rating, filmId }: { rating: Rating; filmId: number }) => {\n  const [innerRating, setInnerRating] = useState(rating);\n\n\n  useEffect(() => {\n    setInnerRating(rating)\n  },[])\n\n  const handleSubmit = (newVoteValue: number) => {\n    const token = getUserToken();\n\n    if (token === null) {\n      alert(\"Only registered users can vote.\");\n      return;\n    }\n\n    const newRating = {\n      ...innerRating,\n      user_vote: newVoteValue,\n    };\n\n    setInnerRating(newRating);\n\n    rateFilm(filmId, newVoteValue, token).then((res) => {\n      setInnerRating(res.data);\n    });\n  };\n\n  return (\n    <>\n      <div className=\"rating\">\n        <div className=\"rate-box\">\n          <div className=\"rating-props\">\n            {innerRating.user_vote > 0 ? (\n              <button className=\"rating-props-button-clicked\" disabled>\n                <MdThumbUp />\n              </button>\n            ) : (\n              <button\n                className=\"rating-props-button\"\n                onClick={() => handleSubmit(1)}\n              >\n                <FiThumbsUp />\n              </button>\n            )}\n          </div>\n          <div className=\"rating-count\">\n            <span className=\"rate-num\">{innerRating.score_with_sign}</span>\n            <div className=\"vote-num\">\n              <span className=\"all-votes\">\n                Votes: {innerRating.votes_count}\n              </span>\n            </div>\n          </div>\n          <div className=\"rating-const\">\n            {innerRating.user_vote < 0 ? (\n              <button className=\"rating-const-button-clicked\" disabled>\n                <MdThumbDown />\n              </button>\n            ) : (\n              <button\n                className=\"rating-const-button\"\n                onClick={() => handleSubmit(-1)}\n              >\n                <FiThumbsDown />\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Votes;\n","import React, { useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst Spinner = ({ isVisible }) => {\n  let [color, setColor] = useState(\"#f9c64e\");\n\n  const override = css`\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-color: red;\n    height: 500px;\n  `;\n\n  return (\n    <div>\n      <BeatLoader css={override} size={30} color={color} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Votes from \"./Votes\";\nimport Spinner from \"../components/Spinner\";\nimport { loadFilms } from \"../apiServices\";\nimport { getUserToken } from \"../localStorageUserServices\";\nimport \"./CardFilm.scss\";\n\n// import { snakeToCamel } from \"../helpers\";\n\nconst CardFilm = ({ genres }) => {\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const token = getUserToken();\n    loadFilms(genres, token).then((response) => {\n      setFilms(response.data);\n      setIsLoading(false);\n    });\n  }, [genres]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Spinner isVisible={isLoading} />\n      ) : (\n        <>\n          <div className=\"cards-film-container\">\n            {films.map((film) => (\n              <>\n                <div className=\"cards-film\" key={film.id}>\n                  <div className=\"cards-film-poster\">\n                    <Link to={`/films/${film.id}`}>\n                      <img\n                        key={film.id}\n                        src={film.poster_url}\n                        alt=\"poster film\"\n                      />\n                    </Link>\n\n                    <Votes rating={film.rating} filmId={film.id} />\n                  </div>\n                  <div className=\"cards-film-content\" key={film.title}>\n                    <div className=\"cards-film-description\">\n                      <h2 className=\"cards-film-title\">{film.title}</h2>\n                      <p className=\"cards-film-translate-name\">\n                        {film.title_ru}, {film.release_year}\n                      </p>\n                      <p className=\"cards-film-country\">\n                        {film.country}, {film.genre}\n                      </p>\n                      <p className=\"cards-film-director\">\n                        Directed by {\"\"}\n                        <span className=\"director\">{film.director}</span>\n                      </p>\n                    </div>\n\n                    <div>\n                      <p className=\"cards-film-name-title\">Actors:</p>\n                      <div className=\"cards-film-image-wrapper\">\n                        {film.actors.slice(0, 4).map((actor) => (\n                          <img\n                            key={actor.id}\n                            className=\"img-actors\"\n                            alt=\"actors\"\n                            src={actor.photo_url}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </>\n            ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\nexport default CardFilm;\n","import Select from \"react-select\";\nimport \"./MySelect.scss\";\n\nconst options = [\n  { value: \"action\", label: \"Action\" },\n  { value: \"mystery\", label: \"Mystery\" },\n  { value: \"thriller\", label: \"Thriller\" },\n  { value: \"comedy\", label: \"Comedy\" },\n  { value: \"family\", label: \"Family\" },\n  { value: \"history\", label: \"History\" },\n  { value: \"sci-fi\", label: \"Sci-Fi\" },\n  { value: \"war\", label: \"War\" },\n  { value: \"adventure\", label: \"Adventure\" },\n  { value: \"crime\", label: \"Crime\" },\n  { value: \"fantasy\", label: \"Fantasy\" },\n  { value: \"horror\", label: \"Horror\" },\n  { value: \"animation\", label: \"Animation\" },\n  { value: \"documentary\", label: \"Documentary\" },\n  { value: \"biography\", label: \"Biography\" },\n  { value: \"drama\", label: \"Drama\" },\n  { value: \"musical\", label: \"Musical\" },\n];\n\nconst MySelect = ({ setSelectedGenres }) => {\n  return (\n    <div className=\"select-container\">\n      <div className=\"wrapper-checkbox\">\n        <input type=\"checkbox\" id=\"checkbox1\" />\n        <label for=\"checkbox1\" disabled>\n          most popular\n        </label>\n      </div>\n      <Select\n        options={options}\n        isMulti\n        className=\"basic-multi-select\"\n        classNamePrefix=\"select\"\n        onChange={(options) => {\n          setSelectedGenres(options.map((o) => o.value));\n        }}\n      />\n    </div>\n  );\n};\n\nexport default MySelect;\n","import { useState } from \"react\";\nimport CardFilm from \"../components/CardFilm\";\nimport MySelect from \"../components/MySelect\";\n\nconst ListOfFilms = () => {\n  const [genres, setGenres] = useState([]);\n\n  return (\n    <>\n      <MySelect setSelectedGenres={setGenres} />\n      <CardFilm genres={genres} />\n    </>\n  );\n};\nexport default ListOfFilms;\n","import { useQuery } from \"react-query\";\nimport { useParams, Link } from \"react-router-dom\";\n\nimport { getFilm, ApiResponse } from \"../apiServices\";\nimport { Film } from \"../interfaces/film\";\nimport Button from \"../components/buttons/Button\";\nimport \"./FilmPage.scss\";\nimport Votes from \"../components/Votes\";\nimport { getUserToken } from \"../localStorageUserServices\";\n\nconst FilmPage = () => {\n  const { id }: { id: any } = useParams();\n\n  const { isLoading, data } = useQuery<ApiResponse<Film>>(\"film\", () =>\n    getFilm(id, getUserToken())\n  );\n\n  return (\n    <div>\n      <Link to=\"/\">\n        <Button className=\"btn-back\">Back</Button>\n      </Link>\n      {!isLoading && data ? (\n        <div className=\"film-page-container\">\n          <div className=\"film-page-poster-wrapper\">\n            <img\n              className=\"film-page-poster\"\n              src={data.data.poster_url}\n              alt=\"film poster\"\n            />\n          <Votes rating={data.data.rating} filmId={id} />\n\n          </div>\n          <div className=\"film-page-content\">\n            <h2 className=\"film-page-title\">{data.data.title}</h2>\n            <h3>\n              {data.data.title_ru}, {data.data.release_year}\n            </h3>\n            <p className=\"film-page-country\">\n              {data.data.country}, {data.data.genre}\n            </p>\n            <p className=\"film-page-description\">{data.data.description}</p>\n\n            <div>\n              <p>Actors:</p>\n              <div className=\"film-page-image-wrapper\">\n                {data.data.actors.map((actor) => (\n                  <img\n                    key={actor.id}\n                    className=\"img-actors\"\n                    alt=\"actors\"\n                    src={actor.photo_url}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h2>Loading...</h2>\n      )}\n    </div>\n  );\n};\n\nexport default FilmPage;\n","import React from \"react\";\n\nimport { RiStarSFill } from \"react-icons/ri\";\nimport \"./MovieRatings.scss\";\n\nconst MovieRatings = () => {\n  return (\n    <>\n      <h2>Content 1</h2>\n      <p>Lorem ipsum dolor sit amet, consectet</p>\n\n      <div className=\"one-film\">\n        <div className=\"rating-poster\">\n          <img\n            alt=\"poster\"\n            src=\"https://resizing.flixster.com/5avIoBUmkdWfFcA8QOn0VM8BI28=/170x243/v2/https://resizing.flixster.com/xQQsLC7IJypTxyRXeOvnPwdEWwE=/ems.ZW1zLXByZC1hc3NldHMvbW92aWVzLzE0ZWFjM2Y1LTYzNTYtNGIwNS1iNGU2LTk0NTA2MGQ3NjY3NC53ZWJw\"\n          />\n        </div>\n        <div className=\"name-of-film\">\n          <p className=\"rating-movie-title\">Drive</p>\n          <p className=\"translate-name\">Драйв, 2011</p>\n          <p className=\"genre-of-the-film\">USA, Action/Crime</p>\n        </div>\n        <div className=\"rating-stars\">\n          <RiStarSFill />\n          <RiStarSFill />\n          <RiStarSFill />\n          <RiStarSFill />\n          <RiStarSFill />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MovieRatings;\n","import React, { useState } from \"react\";\nimport { Form } from \"semantic-ui-react\";\n\nexport const TextField = ({\n  onSave,\n  icon,\n  value,\n  loading,\n  error,\n  ...props\n}) => {\n  const [saving, setSaving] = useState(false);\n  const [saved, setSaved] = useState(false);\n  const [saveError, setSaveError] = useState();\n  const [lastValue, setLastValue] = useState(value || \"\");\n  return (\n    <React.Fragment>\n      <Form.Input\n        // icon={{\n        //   name: saveError ? \"warning circle\" : saved ? \"check\" : icon,\n        //   color: saveError ? \"red\" : saved ? \"green\" : \"grey\"\n        // }}\n        value={value}\n        loading={loading || saving}\n        disabled={loading || saving}\n        error={error || saveError}\n        onChange={() => {\n          setSaved(false);\n        }}\n        onBlur={async (e) => {\n          const val = e.target.value;\n          if (val !== lastValue) {\n            setSaving(true);\n            try {\n              onSave && (await onSave(val));\n              setSaved(true);\n              setSaving(false);\n              setLastValue(val);\n            } catch (err) {\n              setSaveError(\"Error Message\");\n            }\n          }\n        }}\n        {...props}\n      />\n    </React.Fragment>\n  );\n};\n","import { Container, Form } from \"semantic-ui-react\";\nimport { TextField } from \"../TextField\";\nimport { changeDisplayName } from \"../../apiServices\";\nimport { getUserToken } from \"../../localStorageUserServices\";\n\nimport \"./AccountSettings.scss\";\n\nconst AccountSettings = () => {\n  const updateDisplayName = (newName) => {\n    changeDisplayName(newName, getUserToken()).then((r) => {});\n  };\n\n  return (\n    <>\n      <div className=\"wrapper\">\n        <h2 className=\"user-account-header\">Account settings</h2>\n        <Container>\n          <p>Here you can change some information about your account</p>\n          <Form className=\"form-account-settings-manage\">\n            <div className=\"input-container\">\n              <TextField\n                width={8}\n                icon=\"user\"\n                label=\"Display name\"\n                placeholder=\"John Doe\"\n                onSave={updateDisplayName}\n              />\n            </div>\n          </Form>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default AccountSettings;\n","import React, { useState, useEffect } from \"react\";\nimport { getUser } from \"../apiServices\";\nimport MovieRatings from \"../components/profile/MovieRatings\";\nimport AccountSettings from \"../components/profile/AccountSettings\";\nimport { getUserToken } from \"../localStorageUserServices\";\n\nimport \"./UserProfilePage.scss\";\n\nconst UserProfile = () => {\n  const [toggleState, setToggleState] = useState(1);\n\n  const [user, setUser] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const token = getUserToken();\n\n    if (!token) {\n      setUser(null);\n      setIsLoading(false);\n      return;\n    }\n\n    getUser(token).then((user) => {\n      setUser(user.data);\n\n      setIsLoading(false);\n    });\n  }, []);\n\n  const toggleTab = (index) => {\n    setToggleState(index);\n  };\n\n  if (isLoading) {\n    <p>Login required</p>;\n  }\n\n  return (\n    <>\n      {!user ? (\n        <p>No user</p>\n      ) : (\n        <div className=\"profile-container\">\n          <div className=\"profile-header-section\">\n            <h1 className=\"title\">User Profile Page</h1>\n          </div>\n          <div className=\"left-column\">\n            <div className=\"avatar-widget\">\n              <img\n                alt=\"user-avatar\"\n                src=\"https://images.fandango.com/cms/assets/a2f0b9d0-cf84-11eb-a507-3be98bb99253--actordefaulttmb.gif\"\n              />\n            </div>\n            <h2 className=\"user-name\">\n              {user.display_name} - {user.username}\n            </h2>\n          </div>\n\n          <div className=\"right-column\">\n            <div className=\"nav-user-profile\">\n              <div className=\"navigation\">\n                <button\n                  className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\n                  onClick={() => toggleTab(1)}\n                >\n                  Movie Ratings\n                </button>\n\n                <button\n                  className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\n                  onClick={() => toggleTab(2)}\n                >\n                  Profile\n                </button>\n\n                <button\n                  className={toggleState === 3 ? \"tabs active-tabs\" : \"tabs\"}\n                  onClick={() => toggleTab(3)}\n                >\n                  Manage account\n                </button>\n              </div>\n            </div>\n            <div className=\"content-tabs\">\n              <div\n                className={\n                  toggleState === 1\n                    ? \"content-film  active-content\"\n                    : \"content-film\"\n                }\n              >\n                <MovieRatings />\n              </div>\n\n              <div\n                className={\n                  toggleState === 2\n                    ? \"content-film  active-content\"\n                    : \"content-film\"\n                }\n              >\n                <h2>Content 2</h2>\n                <p>Lorem ipsum dolor sit amet, consectet</p>\n                <div className=\"one-film\">\n                  <div className=\"rating-poster\">\n                    <img\n                      alt=\"poster\"\n                      src=\"https://resizing.flixster.com/5avIoBUmkdWfFcA8QOn0VM8BI28=/170x243/v2/https://resizing.flixster.com/xQQsLC7IJypTxyRXeOvnPwdEWwE=/ems.ZW1zLXByZC1hc3NldHMvbW92aWVzLzE0ZWFjM2Y1LTYzNTYtNGIwNS1iNGU2LTk0NTA2MGQ3NjY3NC53ZWJw\"\n                    />\n                  </div>\n                  <div className=\"name-of-film\">\n                    <p className=\"rating-movie-title\">Drive</p>\n                    <p className=\"translate-name\">Драйв, 2011</p>\n                    <p className=\"genre-of-the-film\">USA, Action/Crime</p>\n                  </div>\n                </div>\n              </div>\n              <div\n                className={\n                  toggleState === 3\n                    ? \"content-film  active-content\"\n                    : \"content-film\"\n                }\n              >\n                <AccountSettings />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default UserProfile;\n","import { useState } from \"react\";\nimport { loginUser } from \"../apiServices\";\nimport { saveUserToken } from \"../localStorageUserServices\";\nimport \"./ModalStyles.scss\";\n\nconst LogInWindow = ({ setIsModalVisible }) => {\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [submitted, setSubmitted] = useState(false);\n\n  const [formError, setFormError] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormError(\"\");\n\n    loginUser(values.username, values.password).then((res) => {\n      if (res.statusCode === 200) {\n        saveUserToken(res.data);\n        setIsModalVisible(false);\n      }\n\n      if (res.statusCode >= 400 && res.statusCode < 500) {\n        setFormError(res.data.detail);\n      }\n      setSubmitted(true);\n    });\n  };\n\n  const handleClose = () => setIsModalVisible(false);\n  return (\n    <>\n      <div className=\"modal-background\" role=\"dialog\" aria-modal=\"true\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title\">SIGN IN</h3>\n            <button className=\"modal-close-btn\" onClick={handleClose}></button>\n          </div>\n          <div className=\"form-body\">\n            <form>\n              <ul>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Username</label>\n                  <input\n                    className={`form-field ${\n                      formError ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"text\"\n                    autoComplete=\"on\"\n                    name=\"username\"\n                    placeholder=\"Jonny\"\n                    value={values.username}\n                    onChange={(e) =>\n                      setValues({ ...values, username: e.target.value })\n                    }\n                  />\n                </li>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    className={`form-field ${\n                      formError ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"password\"\n                    autoComplete=\"on\"\n                    name=\"password\"\n                    value={values.password}\n                    onChange={(e) =>\n                      setValues({ ...values, password: e.target.value })\n                    }\n                  />\n                </li>\n                <p>{formError}</p>\n                <li className=\"form-group\">\n                  <button\n                    className={`login-submit-btn ${\n                      !values.username || !values.password ? \"btn-disabled\" : \"\"\n                    }`}\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                    disabled={!values.username || !values.password}\n                  >\n                    LOG IN\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n          <footer className=\"modal-footer\">\n            <p className=\"modal-footer-paragraph\">\n              Don't have an account?\n              <button className=\"login-footer-btn\">SIGN UP HERE</button>\n            </p>\n          </footer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LogInWindow;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createUser } from \"../apiServices\";\nimport \"./ModalStyles.scss\";\n\nconst defaultFormErrors = {\n  username: null,\n  email: null,\n  password: null,\n};\n\nconst SignUpWindow = ({ setIsSignUpWindowVisible }) => {\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [submitted, setSubmitted] = useState(false);\n  const [formErrors, setFormErrors] = useState(defaultFormErrors);\n\n  const handleCloseSignUp = () => setIsSignUpWindowVisible(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors(defaultFormErrors);\n\n    createUser(values.username, values.email, values.password).then((res) => {\n      if (res.statusCode === 200) {\n        setIsSignUpWindowVisible(false);\n      }\n\n      if (res.statusCode >= 400 && res.statusCode < 500) {\n        const newErrors = {\n          ...defaultFormErrors,\n        };\n\n        for (const error of res.data.detail) {\n          const field = error.loc.slice(-1)[0];\n          newErrors[field] = error.msg;\n        }\n\n        setFormErrors(newErrors);\n      }\n      setSubmitted(true);\n    });\n  };\n\n  return (\n    <>\n      <div className=\"modal-background\" role=\"dialog\" aria-modal=\"true\">\n        <div className=\"modal-content height\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title\">SIGN UP FOR RATE FILM</h3>\n            <button\n              className=\"modal-close-btn\"\n              onClick={handleCloseSignUp}\n            ></button>\n          </div>\n          <div className=\"form-body\">\n            <form>\n              <ul>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Your name on the website</label>\n                  <input\n                    className={`form-field ${\n                      formErrors.username ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Jonny\"\n                    value={values.username}\n                    onChange={(e) =>\n                      setValues({ ...values, username: e.target.value })\n                    }\n                  />\n                  <p className=\"msg-error\">{formErrors.username}</p>\n                </li>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Email address</label>\n                  <input\n                    className={`form-field ${\n                      formErrors.email ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"email\"\n                    autoComplete=\"on\"\n                    name=\"email\"\n                    placeholder=\"jonny@gmail.com\"\n                    value={values.email}\n                    onChange={(e) =>\n                      setValues({ ...values, email: e.target.value })\n                    }\n                  />\n                  <p className=\"msg-error\">{formErrors.email}</p>\n                </li>\n\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    className={`form-field ${\n                      formErrors.password ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"password\"\n                    autoComplete=\"on\"\n                    name=\"password\"\n                    value={values.password}\n                    onChange={(e) =>\n                      setValues({ ...values, password: e.target.value })\n                    }\n                  />\n                  <p className=\"msg-error\">{formErrors.password}</p>\n                </li>\n\n                <li className=\"form-group\">\n                  <button\n                    className={`login-submit-btn ${\n                      !values.username || !values.email || !values.password\n                        ? \"btn-disabled\"\n                        : \"\"\n                    }`}\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                    disabled={\n                      !values.username || !values.email || !values.password\n                    }\n                  >\n                    CREATE YOUR ACCOUNT\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n          <footer className=\"modal-footer\">\n            <p className=\"modal-footer-paragraph\">\n              Already have an account?\n              <button className=\"signup-footer-link\">LOG IN HERE</button>\n            </p>\n            <p className=\"policy-text\">\n              By creating an account, you agree to the{\" \"}\n              <Link\n                to=\"https://www.fandango.com/policies/privacy-policy\"\n                className=\"signup-footer-link small\"\n              >\n                Privacy Policy\n              </Link>{\" \"}\n              and the{\" \"}\n              <Link\n                to=\"https://www.fandango.com/policies/terms-and-policies\"\n                className=\"signup-footer-link small\"\n              >\n                Terms and Policies{\" \"}\n              </Link>\n            </p>\n          </footer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SignUpWindow;\n","import React, { useState } from \"react\";\nimport \"./styles/App.scss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport ListOfFilms from \"./pages/ListOfFilms\";\nimport FilmPage from \"./pages/FilmPage\";\nimport UserProfile from \"./pages/UserProfilePage\";\nimport LogInWindow from \"./components/LogIn\";\nimport SignUpWindow from \"./components/SignUp\";\n\nfunction App() {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isSignUpWindowVisible, setIsSignUpWindowVisible] = useState(false);\n\n  return (\n    <Router>\n      <div>\n        {isModalVisible && (\n          <LogInWindow setIsModalVisible={setIsModalVisible} />\n        )}\n        {isSignUpWindowVisible && (\n          <SignUpWindow setIsSignUpWindowVisible={setIsSignUpWindowVisible} />\n        )}\n      </div>\n\n      <Header\n        setIsModalVisible={setIsModalVisible}\n        setIsSignUpWindowVisible={setIsSignUpWindowVisible}\n      />\n      <div className=\"main-container\">\n        <Switch>\n          <Route path=\"/films/:id\">\n            <FilmPage />\n          </Route>\n\n          <Route path=\"/profile\">\n            <UserProfile />\n          </Route>\n\n          <Route path=\"/\">\n            <ListOfFilms />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <App />\n  </QueryClientProvider>,\n  rootElement\n);\n"],"sourceRoot":""}