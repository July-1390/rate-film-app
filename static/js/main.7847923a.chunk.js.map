{"version":3,"sources":["localStorageUserServices.tsx","apiServices.tsx","components/buttons/SignUpButton.js","components/buttons/LogInButton.js","components/profile/ThumbMenuProfile.tsx","components/buttons/Button.tsx","components/Header.tsx","components/Votes.js","components/Spinner.js","components/CardFilm.js","components/MySelect.js","pages/ListOfFilms.js","pages/FilmPage.tsx","components/profile/MovieRatings.js","components/TextField.js","components/profile/AccountSettings.js","pages/UserProfilePage.js","components/LogIn.js","components/SignUp.js","App.tsx","index.tsx"],"names":["getUserToken","rawToken","localStorage","getItem","JSON","parse","baseUrl","loadFilms","genres","a","searchParams","URLSearchParams","genre","append","url","fetch","response","json","films","statusCode","status","data","getFilm","id","film","createUser","username","email","password","body","method","headers","stringify","userOrError","loginUser","formData","FormData","userToken","getUser","token","access_token","user","changeDisplayName","displayName","display_name","SignUpButton","setIsSignUpWindowVisible","className","onClick","LogInButton","setIsModalVisible","ThumbMenuProfile","alt","src","to","removeItem","logOutUser","href","Button","children","classes","Header","useState","setUser","isLoading","setIsLoading","useEffect","then","Votes","Spinner","isVisible","color","override","css","size","CardFilm","setFilms","map","poster_url","title","title_ru","release_year","country","director","actors","slice","actor","photo_url","options","value","label","MySelect","setSelectedGenres","type","for","disabled","isMulti","classNamePrefix","onChange","o","ListOfFilms","setGenres","FilmPage","useParams","useQuery","description","MovieRatings","TextField","onSave","icon","loading","error","props","saving","setSaving","setSaved","saveError","setSaveError","lastValue","setLastValue","Fragment","Form","Input","onBlur","e","val","target","AccountSettings","Container","width","placeholder","newName","r","UserProfile","toggleState","setToggleState","toggleTab","index","LogInWindow","values","setValues","setSubmitted","formError","setFormError","role","aria-modal","autoComplete","name","preventDefault","res","tokenAsString","setItem","saveUserToken","detail","defaultFormErrors","SignUpWindow","formErrors","setFormErrors","newErrors","loc","msg","App","isModalVisible","isSignUpWindowVisible","LogIn","SignUp","path","queryClient","QueryClient","rootElement","document","getElementById","ReactDOM","render","QueryClientProvider","client"],"mappings":"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","file":"static/js/main.7847923a.chunk.js","sourcesContent":["import {User, AccessToken} from './interfaces/user'\n\n\nexport const saveUser = (user: User) => {\n    const userAsString = JSON.stringify(user)\n\n    localStorage.setItem('user', userAsString)\n}\n\nexport const saveUserToken = (token: AccessToken) => {\n    const tokenAsString = JSON.stringify(token)\n\n    localStorage.setItem('userToken', tokenAsString)\n}\n\nexport const getUserToken = (): AccessToken => {\n    const rawToken = localStorage.getItem('userToken')\n    return rawToken ?  JSON.parse(rawToken) : null\n}\n\nexport const logOutUser = (token: AccessToken) => {\n    const tokenAsString = JSON.stringify(token)\n\n    localStorage.removeItem('userToken')\n}\n\n","import { Film } from \"./interfaces/film\";\nimport { User, UserCreateErrorResponse, AccessToken } from \"./interfaces/user\";\n\nconst baseUrl = \"https://rfilm.mswan.ru/api/v1\";\n\nexport interface ApiResponse<T> {\n  statusCode: number;\n  data: T;\n}\n\nexport const loadFilms = async (\n  genres: string[]\n): Promise<ApiResponse<Film[]>> => {\n  const searchParams = new URLSearchParams();\n\n  for (const genre of genres) {\n    searchParams.append(\"genre\", genre);\n  }\n\n  const url = `${baseUrl}/films?${searchParams}`;\n\n  const response = await fetch(url);\n  const films = (await response.json()) as Film[];\n\n  return {\n    statusCode: response.status,\n    data: films,\n  };\n};\n\nexport const getFilm = async (id: string): Promise<ApiResponse<Film>> => {\n  const url = `${baseUrl}/films/${id}`;\n\n  const response = await fetch(url);\n  const film = (await response.json()) as Film;\n\n  return {\n    statusCode: response.status,\n    data: film,\n  };\n};\n\nexport const createUser = async (\n  username: string,\n  email: string,\n  password: string\n): Promise<ApiResponse<User | UserCreateErrorResponse>> => {\n  const body = {\n    username: username,\n    email: email,\n    password: password,\n  };\n\n  const url = `${baseUrl}/users`;\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\n  const userOrError = await response.json();\n\n  return {\n    statusCode: response.status,\n    data: userOrError,\n  };\n};\n\nexport const loginUser = async (\n  username: string,\n  password: string\n): Promise<ApiResponse<AccessToken>> => {\n  const url = `${baseUrl}/users/token`;\n\n  let formData = new FormData();\n  formData.append(\"username\", username);\n  formData.append(\"password\", password);\n\n  const response = await fetch(url, {\n    body: formData,\n    method: \"post\",\n  });\n\n  const userToken = (await response.json()) as AccessToken;\n\n  return {\n    statusCode: response.status,\n    data: userToken,\n  };\n};\n\nexport const getUser = async (token: AccessToken): Promise<ApiResponse<User>> => {\n  const url = `${baseUrl}/users/me`;\n  // const headers = {'Authorization': `Bearer ${token.access_token}`}\n\n  const response = await fetch(url, {headers: {'Authorization': `Bearer ${token.access_token}`}});\n  const user = (await response.json()) as User;\n\n  return {\n    statusCode: response.status,\n    data: user,\n  };\n};\n\nexport const changeDisplayName = async (\n  displayName: string,\n  token: AccessToken,\n): Promise<ApiResponse<User | UserCreateErrorResponse>> => {\n  const body = {\n    display_name: displayName\n  };\n\n  const url = `${baseUrl}/users/me`;\n\n  const response = await fetch(url, {\n    method: \"PATCH\",\n    headers: {\n      \"Authorization\": `Bearer ${token.access_token}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\n  const userOrError = await response.json();\n\n  return {\n    statusCode: response.status,\n    data: userOrError,\n  };\n};\n\n","import React from 'react'\nimport './SignUpButton.scss'\n\nconst SignUpButton = ({setIsSignUpWindowVisible}) => {\n\n    const handleShowSignUpWindow = () => setIsSignUpWindowVisible(true);\n\n\n    return (\n        <>\n            <button className=\"btn btn-primary\" onClick={handleShowSignUpWindow}>\n                 Sign Up\n            </button>\n        </>\n    )\n}\n\nexport default SignUpButton;","import React from 'react'\nimport './LogInButton.scss'\n\nconst LogInButton = ({setIsModalVisible}) => {\n\n    const handleShow = () => {setIsModalVisible(true)};\n\n    return (\n        <>\n            <button className=\"btn btn-primary\" onClick={handleShow}>Log In</button>\n        </>\n    )\n\n}\n\nexport default LogInButton;","\nimport {logOutUser} from '../../localStorageUserServices'\nimport {Link} from 'react-router-dom'\nimport {RiArrowDropDownFill} from 'react-icons/ri'\nimport { User } from \"../../interfaces/user\"\nimport { AccessToken } from \"../../interfaces/user\"\nimport './ThumbMenuProfile.scss'\n\nconst ThumbMenuProfile = ({user}:{user: User}, {token}:{token: AccessToken}) => {\n\n    const handleLogOut = () => logOutUser(token)\n\n    return (\n        <>\n            <div className='wrapper-thumb-menu'>                 \n                    <img\n                        className='thumb-avatar'\n                        alt=\"user-avatar\"\n                        src=\"https://images.fandango.com/cms/assets/a2f0b9d0-cf84-11eb-a507-3be98bb99253--actordefaulttmb.gif\"\n                    />                 \n                    <span className='thumb-menu-username'>{user.username}</span>                               \n                <p className='dropdown-arrow'><RiArrowDropDownFill/></p>                           \n            </div>\n            <ul className='list-dropdown-items'>\n                    <li className='dropdown-item'>\n                        <Link className='dropdown-link' to='/profile'>Profile</Link>\n                    </li>\n                    <li className='dropdown-item'>\n                        <a className='dropdown-link' onClick={handleLogOut} href='/'>Log out</a>\n                    </li>\n            </ul>  \n        </>\n    )\n\n}\n\nexport default ThumbMenuProfile;","import \"./Button.scss\";\n\nconst Button = ({\n  children,\n  className,\n}: {\n  children: any;\n  className: string;\n}) => {\n  const classes = `btn ${className}`;\n\n  return <button className={classes}>{children}</button>;\n};\n\nexport default Button;\n","import {useState, useEffect} from 'react'\nimport { Link } from \"react-router-dom\";\nimport { GiFilmSpool } from \"react-icons/gi\";\nimport {getUserToken} from \"../localStorageUserServices\";\nimport { getUser } from \"../apiServices\";\nimport SignUpButton from '../components/buttons/SignUpButton'\nimport LogInButton from '../components/buttons/LogInButton'\nimport ThumbMenuProfile from './profile/ThumbMenuProfile'\nimport {User} from '../interfaces/user'\nimport Button from \"./buttons/Button\";\nimport \"./Header.scss\";\n\nconst Header = ({\n  setIsModalVisible,\n  setIsSignUpWindowVisible,\n}: {\n  setIsModalVisible: (val: boolean) => void;\n  setIsSignUpWindowVisible: (val: boolean) => void;\n}) => {\n\n  const [user, setUser] = useState<User | null>();\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect (() => {\n    setIsLoading(true)\n    const token = getUserToken()\n\n    if (!token) {\n      setUser(null)\n      setIsLoading(false)\n      return\n    }\n\n    getUser(token).then(user => {\n      setUser(user.data)\n\n      setIsLoading(false)\n    })\n  }, [])\n\n  if(isLoading){\n    <></>\n  }\n  return (\n    <>\n      <div className=\"header-background-line\">\n        <div className=\"main-container\">\n          <header className=\"header-container\">\n            <div className=\"header-logo\">\n              <Link to=\"/\" className=\"navbar-logo\">\n                <GiFilmSpool className=\"navbar-icon\" />\n                <h4 className=\"navbar-title\">\n                  Rate<span className=\"highlight\">Film</span>\n                </h4>\n              </Link>\n            </div>\n\n            <nav className=\"main-nav\">\n              {!user ? (\n              <ul className=\"nav-list\">\n              <li className=\"nav-list-item\">\n                <Link to=\"/\" className=\"btn-link\">\n                  <Button className=\"btn-primary\">List Of Films</Button>\n                </Link>\n              </li>\n              <li className=\"nav-list-item\">\n                <SignUpButton setIsSignUpWindowVisible={setIsSignUpWindowVisible} />\n              </li>\n              <li className=\"nav-list-item\">\n                <LogInButton setIsModalVisible={setIsModalVisible} />              \n              </li>\n            </ul>\n            ) : (\n              <ul className=\"nav-list\">\n              <li className=\"nav-list-item\">\n                <Link to=\"/\" className=\"btn-link\">\n                  <Button className=\"btn-primary\">List Of Films</Button>\n                </Link>\n              </li>\n              <li className=\"nav-list-item\">\n                <ThumbMenuProfile user={user}/>\n              </li>\n            </ul>\n            )}\n            </nav>\n          </header>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Header;\n","import React from \"react\";\n// import { FiThumbsUp } from \"react-icons/fi\";\nimport { MdThumbUp, MdThumbDown } from \"react-icons/md\";\nimport \"./Votes.scss\";\n\nconst Votes = () => {\n  return (\n    <>\n      <div className=\"rating\">\n        <div className=\"rate-box\">\n          <div className=\"rating-plus\">\n            <MdThumbUp />\n          </div>\n          <div className=\"rating-count\">\n            <p className=\"rate-num\">+7</p>\n          </div>\n          <div className=\"rating-minus\">\n            <MdThumbDown />\n          </div>\n        </div>\n      </div>\n    </>\n    // <div className=\"vote-container\">\n    //   <div className=\"vote-wrapper\">\n    //     <h3 className=\"percentage\">35%</h3>\n    //     <div className=\"icon-like\">\n    //       <FiThumbsUp />\n    //     </div>\n    //     <div className=\"count-votes\">\n    //       <p>170 votes</p>\n    //     </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default Votes;\n","import React, { useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst Spinner = ({ isVisible }) => {\n  let [color, setColor] = useState(\"#f9c64e\");\n\n  const override = css`\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-color: red;\n    height: 500px;\n  `;\n\n  return (\n    <div>\n      <BeatLoader css={override} size={30} color={color} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Votes from \"./Votes\";\nimport Spinner from \"../components/Spinner\";\nimport { loadFilms } from \"../apiServices\";\nimport \"./CardFilm.scss\";\n\n// import { snakeToCamel } from \"../helpers\";\n\nconst CardFilm = ({ genres }) => {\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadFilms(genres).then((response) => {\n      setFilms(response.data);\n      setIsLoading(false);\n    });\n  }, [genres]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Spinner isVisible={isLoading} />\n      ) : (\n        <>\n          <div className=\"cards-film-container\">\n            {films.map((film) => (\n              <>\n                <Link to={`/films/${film.id}`}>\n                  <div className=\"cards-film\" key={film.id}>\n                    <div className=\"cards-film-poster\">\n                      <img\n                        key={film.id}\n                        src={film.poster_url}\n                        alt=\"poster film\"\n                      />\n\n                      <Votes />\n                    </div>\n                    <div className=\"cards-film-content\" key={film.title}>\n                      <div className=\"cards-film-description\">\n                        <h2 className=\"cards-film-title\">{film.title}</h2>\n                        <p className=\"cards-film-translate-name\">\n                          {film.title_ru}, {film.release_year}\n                        </p>\n                        <p className=\"cards-film-country\">\n                          {film.country}, {film.genre}\n                        </p>\n                        <p className=\"cards-film-director\">\n                          Directed by {\"\"}\n                          <span className=\"director\">{film.director}</span>\n                        </p>\n                      </div>\n\n                      <div>\n                        <p className=\"cards-film-name-title\">Actors:</p>\n                        <div className=\"cards-film-image-wrapper\">\n                          {film.actors.slice(0, 4).map((actor) => (\n                            <img\n                              key={actor.id}\n                              className=\"img-actors\"\n                              alt=\"actors\"\n                              src={actor.photo_url}\n                            />\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Link>\n              </>\n            ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\nexport default CardFilm;\n","import Select from \"react-select\";\nimport \"./MySelect.scss\";\n\nconst options = [\n  { value: \"action\", label: \"Action\" },\n  { value: \"mystery\", label: \"Mystery\" },\n  { value: \"thriller\", label: \"Thriller\" },\n  { value: \"comedy\", label: \"Comedy\" },\n  { value: \"family\", label: \"Family\" },\n  { value: \"history\", label: \"History\" },\n  { value: \"sci-fi\", label: \"Sci-Fi\" },\n  { value: \"war\", label: \"War\" },\n  { value: \"adventure\", label: \"Adventure\" },\n  { value: \"crime\", label: \"Crime\" },\n  { value: \"fantasy\", label: \"Fantasy\" },\n  { value: \"horror\", label: \"Horror\" },\n  { value: \"animation\", label: \"Animation\" },\n  { value: \"documentary\", label: \"Documentary\" },\n  { value: \"biography\", label: \"Biography\" },\n  { value: \"drama\", label: \"Drama\" },\n  { value: \"musical\", label: \"Musical\" },\n];\n\nconst MySelect = ({ setSelectedGenres }) => {\n  return (\n    <div className=\"select-container\">\n      <div className=\"wrapper-checkbox\">\n        <input type=\"checkbox\" id=\"checkbox1\" />\n        <label for=\"checkbox1\" disabled>\n          most popular\n        </label>\n      </div>\n      <Select\n        options={options}\n        isMulti\n        className=\"basic-multi-select\"\n        classNamePrefix=\"select\"\n        onChange={(options) => {\n          setSelectedGenres(options.map((o) => o.value));\n        }}\n      />\n    </div>\n  );\n};\n\nexport default MySelect;\n","import { useState } from \"react\";\nimport CardFilm from \"../components/CardFilm\";\nimport MySelect from \"../components/MySelect\";\n\nconst ListOfFilms = () => {\n  const [genres, setGenres] = useState([]);\n\n  return (\n    <>\n      <MySelect setSelectedGenres={setGenres} />\n      <CardFilm genres={genres} />\n    </>\n  );\n};\nexport default ListOfFilms;\n","import { useQuery } from \"react-query\";\nimport { useParams, Link } from \"react-router-dom\";\n\nimport { getFilm, ApiResponse } from \"../apiServices\";\nimport { Film } from \"../interfaces/film\";\nimport Button from \"../components/buttons/Button\";\nimport \"./FilmPage.scss\";\n\nconst FilmPage = () => {\n  const { id }: { id: any } = useParams();\n\n  const { isLoading, data } = useQuery<ApiResponse<Film>>(\"film\", () =>\n    getFilm(id)\n  );\n\n  return (\n    <div>\n      <Link to=\"/\">\n        <Button className=\"btn-back\">Back</Button>\n      </Link>\n      {!isLoading && data ? (\n        <div className=\"film-page-container\">\n          <div className=\"film-page-poster-wrapper\">\n            <img\n              className=\"film-page-poster\"\n              src={data.data.poster_url}\n              alt=\"film poster\"\n            />\n          </div>\n          <div className=\"film-page-content\">\n            <h2 className=\"film-page-title\">{data.data.title}</h2>\n            <h3>\n              {data.data.title_ru}, {data.data.release_year}\n            </h3>\n            <p className=\"film-page-country\">\n              {data.data.country}, {data.data.genre}\n            </p>\n            <p className=\"film-page-description\">{data.data.description}</p>\n\n            <div>\n              <p>Actors:</p>\n              <div className=\"film-page-image-wrapper\">\n                {data.data.actors.map((actor) => (\n                  <img\n                    key={actor.id}\n                    className=\"img-actors\"\n                    alt=\"actors\"\n                    src={actor.photo_url}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h2>Loading...</h2>\n      )}\n    </div>\n  );\n};\n\nexport default FilmPage;\n","import React from 'react'\n\nimport { RiStarSFill } from \"react-icons/ri\";\nimport './MovieRatings.scss'\n\nconst MovieRatings = () => {\n\n    return (\n        <>\n            <h2>Content 1</h2>\n            <p>Lorem ipsum dolor sit amet, consectet</p>\n\n              <div className=\"one-film\">\n                <div className=\"rating-poster\">\n                  <img\n                    alt=\"poster\"\n                    src=\"https://resizing.flixster.com/5avIoBUmkdWfFcA8QOn0VM8BI28=/170x243/v2/https://resizing.flixster.com/xQQsLC7IJypTxyRXeOvnPwdEWwE=/ems.ZW1zLXByZC1hc3NldHMvbW92aWVzLzE0ZWFjM2Y1LTYzNTYtNGIwNS1iNGU2LTk0NTA2MGQ3NjY3NC53ZWJw\"\n                  />\n                </div>\n                <div className=\"name-of-film\">\n                  <p className=\"rating-movie-title\">Drive</p>\n                  <p className=\"translate-name\">Драйв, 2011</p>\n                  <p className=\"genre-of-the-film\">USA, Action/Crime</p>\n                </div>\n                <div className=\"rating-stars\">\n                  <RiStarSFill />\n                  <RiStarSFill />\n                  <RiStarSFill />\n                  <RiStarSFill />\n                  <RiStarSFill />\n                </div>\n              </div>      \n        </>\n    )\n\n}\n\nexport default MovieRatings","import React, { useState } from \"react\";\nimport { Form } from \"semantic-ui-react\";\n\n\nexport const TextField = ({\n  onSave,\n  icon,\n  value,\n  loading,\n  error,\n  ...props\n}) => {\n  const [saving, setSaving] = useState(false);\n  const [saved, setSaved] = useState(false);\n  const [saveError, setSaveError] = useState();\n  const [lastValue, setLastValue] = useState(value || \"\");\n  return (\n    <React.Fragment>\n      <Form.Input\n        // icon={{\n        //   name: saveError ? \"warning circle\" : saved ? \"check\" : icon,\n        //   color: saveError ? \"red\" : saved ? \"green\" : \"grey\"\n        // }}\n        value={value}\n        loading={loading || saving}\n        disabled={loading || saving}\n        error={error || saveError}\n        onChange={() => {\n          setSaved(false);\n        }}\n        onBlur={async e => {\n          const val = e.target.value;\n          if (val !== lastValue) {\n            setSaving(true);\n            try {\n              onSave && (await onSave(val));\n              setSaved(true);\n              setSaving(false);\n              setLastValue(val);\n            } catch (err) {\n              setSaveError(\"Error Message\");\n            }\n          }\n        }}\n        {...props}\n      />\n    </React.Fragment>\n  );\n};\n","\nimport { Container, Form } from \"semantic-ui-react\";\nimport { TextField } from \"../TextField\";\nimport {changeDisplayName} from '../../apiServices'\nimport {getUserToken} from '../../localStorageUserServices'\n\nimport './AccountSettings.scss';\n\nconst AccountSettings = () => {\n    const updateDisplayName = (newName) => {\n        changeDisplayName(newName, getUserToken()).then((r) => {})    \n    }\n\n    return (\n        <>\n        <div className=\"wrapper\">\n            <h2 className='user-account-header'>Account settings</h2>\n            <Container>\n                <p>Here you can change some information about your account</p>\n                <Form className=\"form-account-settings-manage\">\n                    <div className=\"input-container\">                   \n                        <TextField\n                            width={8}\n                            icon=\"user\"\n                            label=\"Display name\"\n                            placeholder=\"John Doe\"\n                            onSave={updateDisplayName}\n                        />\n                    </div>                  \n                </Form>\n            </Container>  \n        </div>        \n        </>\n    )\n}\n\nexport default AccountSettings","import React, { useState, useEffect } from \"react\";\nimport { getUser } from \"../apiServices\";\nimport MovieRatings from '../components/profile/MovieRatings'\nimport AccountSettings from \"../components/profile/AccountSettings\";\nimport {getUserToken} from \"../localStorageUserServices\";\n\nimport \"./UserProfilePage.scss\";\n\nconst UserProfile = () => {\n  const [toggleState, setToggleState] = useState(1);\n\n  const [user, setUser] = useState();\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect (() => {\n    setIsLoading(true)\n    const token = getUserToken()\n\n    if (!token) {\n      setUser(null)\n      setIsLoading(false)\n      return\n    }\n\n    getUser(token).then(user => {\n      setUser(user.data)\n\n      setIsLoading(false)\n    })\n  }, [])\n\n  const toggleTab = (index) => {\n    setToggleState(index);\n  };\n\n  if (isLoading) {\n    <p>Login required</p>\n  }\n  \n  return (\n  <> \n    {!user ? (\n      <p>No user</p>\n    ) : (\n      \n      <div className=\"profile-container\">\n        <div className=\"profile-header-section\">\n          <h1 className=\"title\">User Profile Page</h1>\n        </div>\n        <div className=\"left-column\">\n          <div className=\"avatar-widget\">\n            <img\n              alt=\"user-avatar\"\n              src=\"https://images.fandango.com/cms/assets/a2f0b9d0-cf84-11eb-a507-3be98bb99253--actordefaulttmb.gif\"\n            />\n          </div>\n          <h2 className=\"user-name\">{user.display_name} - {user.username}</h2>\n        </div>\n\n        <div className=\"right-column\">\n          <div className=\"nav-user-profile\">\n            <div className=\"navigation\">\n              <button\n                className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\n                onClick={() => toggleTab(1)}\n              >\n                Movie Ratings\n              </button>\n\n              <button\n                className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\n                onClick={() => toggleTab(2)}\n              >\n                Profile\n              </button>\n\n              <button\n                className={toggleState === 3 ? \"tabs active-tabs\" : \"tabs\"}\n                onClick={() => toggleTab(3)}\n              >\n                Manage account\n              </button>\n            </div>\n          </div>\n          <div className=\"content-tabs\">\n            <div\n              className={\n                toggleState === 1\n                  ? \"content-film  active-content\"\n                  : \"content-film\"\n              }\n            >\n              <MovieRatings />\n            </div>\n\n            <div\n              className={\n                toggleState === 2\n                  ? \"content-film  active-content\"\n                  : \"content-film\"\n              }\n            >\n              <h2>Content 2</h2>\n              <p>Lorem ipsum dolor sit amet, consectet</p>\n              <div className=\"one-film\">\n                <div className=\"rating-poster\">\n                  <img\n                    alt=\"poster\"\n                    src=\"https://resizing.flixster.com/5avIoBUmkdWfFcA8QOn0VM8BI28=/170x243/v2/https://resizing.flixster.com/xQQsLC7IJypTxyRXeOvnPwdEWwE=/ems.ZW1zLXByZC1hc3NldHMvbW92aWVzLzE0ZWFjM2Y1LTYzNTYtNGIwNS1iNGU2LTk0NTA2MGQ3NjY3NC53ZWJw\"\n                  />\n                </div>\n                <div className=\"name-of-film\">\n                  <p className=\"rating-movie-title\">Drive</p>\n                  <p className=\"translate-name\">Драйв, 2011</p>\n                  <p className=\"genre-of-the-film\">USA, Action/Crime</p>\n                </div>\n              </div>\n            </div>\n            <div\n              className={\n                toggleState === 3\n                  ? \"content-film  active-content\"\n                  : \"content-film\"\n              }\n            >\n              <AccountSettings />\n            </div>\n          </div>\n        </div>\n      </div>\n    )}      \n  </>\n  );\n};\n\nexport default UserProfile;\n","import { useState } from \"react\";\nimport { loginUser } from \"../apiServices\";\nimport { saveUserToken } from \"../localStorageUserServices\";\nimport \"./ModalStyles.scss\";\n\nconst LogInWindow = ({ setIsModalVisible }) => {\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [submitted, setSubmitted] = useState(false);\n\n  const [formError, setFormError] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormError(\"\");\n\n    loginUser(values.username, values.password).then((res) => {\n      if (res.statusCode === 200) {\n        saveUserToken(res.data)\n        setIsModalVisible(false);\n      }\n\n      if (res.statusCode >= 400 && res.statusCode < 500) {\n        setFormError(res.data.detail);\n      }\n      setSubmitted(true);\n    });\n  };\n\n  const handleClose = () => setIsModalVisible(false);\n  return (\n    <>\n      <div className=\"modal-background\" role=\"dialog\" aria-modal=\"true\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title\">SIGN IN</h3>\n            <button className=\"modal-close-btn\" onClick={handleClose}></button>\n          </div>\n          <div className=\"form-body\">\n            <form>\n              <ul>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Username</label>\n                  <input\n                    className={`form-field ${\n                      formError ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"text\"\n                    autoComplete=\"on\"\n                    name=\"username\"\n                    placeholder=\"Jonny\"\n                    value={values.username}\n                    onChange={(e) =>\n                      setValues({ ...values, username: e.target.value })\n                    }\n                  />\n                </li>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    className={`form-field ${\n                      formError ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"password\"\n                    autoComplete=\"on\"\n                    name=\"password\"\n                    value={values.password}\n                    onChange={(e) =>\n                      setValues({ ...values, password: e.target.value })\n                    }\n                  />\n                </li>\n                <p>{formError}</p>\n                <li className=\"form-group\">\n                  <button\n                    className={`login-submit-btn ${\n                      !values.username || !values.password ? \"btn-disabled\" : \"\"\n                    }`}\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                    disabled={!values.username || !values.password}\n                  >\n                    LOG IN\n                  </button> \n                </li>\n              </ul>\n            </form>\n          </div>\n          <footer className=\"modal-footer\">\n            <p className=\"modal-footer-paragraph\">\n              Don't have an account?\n              <button className=\"login-footer-btn\">SIGN UP HERE</button>\n            </p>\n          </footer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LogInWindow;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createUser } from \"../apiServices\";\nimport \"./ModalStyles.scss\";\n\nconst defaultFormErrors = {\n  username: null,\n  email: null,\n  password: null,\n};\n\nconst SignUpWindow = ({ setIsSignUpWindowVisible }) => {\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [submitted, setSubmitted] = useState(false);\n  const [formErrors, setFormErrors] = useState(defaultFormErrors);\n\n  const handleCloseSignUp = () => setIsSignUpWindowVisible(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors(defaultFormErrors);\n\n    createUser(values.username, values.email, values.password).then((res) => {\n      if (res.statusCode === 200) {\n        setIsSignUpWindowVisible(false);\n      }\n\n      if (res.statusCode >= 400 && res.statusCode < 500) {\n        const newErrors = {\n          ...defaultFormErrors,\n        };\n\n        for (const error of res.data.detail) {\n          const field = error.loc.slice(-1)[0];\n          newErrors[field] = error.msg;\n        }\n\n        setFormErrors(newErrors);\n      }\n      setSubmitted(true);\n    });\n  };\n\n  return (\n    <>\n      <div className=\"modal-background\" role=\"dialog\" aria-modal=\"true\">\n        <div className=\"modal-content height\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title\">SIGN UP FOR RATE FILM</h3>\n            <button\n              className=\"modal-close-btn\"\n              onClick={handleCloseSignUp}\n            ></button>\n          </div>\n          <div className=\"form-body\">\n            <form>\n              <ul>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Your name on the website</label>\n                  <input\n                    className={`form-field ${\n                      formErrors.username ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Jonny\"\n                    value={values.username}\n                    onChange={(e) =>\n                      setValues({ ...values, username: e.target.value })\n                    }\n                  />\n                  <p className=\"msg-error\">{formErrors.username}</p>\n                </li>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Email address</label>\n                  <input\n                    className={`form-field ${\n                      formErrors.email ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"email\"\n                    autoComplete=\"on\"\n                    name=\"email\"\n                    placeholder=\"jonny@gmail.com\"\n                    value={values.email}\n                    onChange={(e) =>\n                      setValues({ ...values, email: e.target.value })\n                    }\n                  />\n                  <p className=\"msg-error\">{formErrors.email}</p>\n                </li>\n\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    className={`form-field ${\n                      formErrors.password ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"password\"\n                    autoComplete=\"on\"\n                    name=\"password\"\n                    value={values.password}\n                    onChange={(e) =>\n                      setValues({ ...values, password: e.target.value })\n                    }\n                  />\n                  <p className=\"msg-error\">{formErrors.password}</p>\n                </li>\n\n                <li className=\"form-group\">\n                  <button\n                    className={`login-submit-btn ${\n                      !values.username || !values.email || !values.password\n                        ? \"btn-disabled\"\n                        : \"\"\n                    }`}\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                    disabled={\n                      !values.username || !values.email || !values.password\n                    }\n                  >\n                    CREATE YOUR ACCOUNT\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n          <footer className=\"modal-footer\">\n            <p className=\"modal-footer-paragraph\">\n              Already have an account?\n              <button className=\"signup-footer-link\">LOG IN HERE</button>\n            </p>\n            <p className=\"policy-text\">\n              By creating an account, you agree to the{\" \"}\n              <Link\n                to=\"https://www.fandango.com/policies/privacy-policy\"\n                className=\"signup-footer-link small\"\n              >\n                Privacy Policy\n              </Link>{\" \"}\n              and the{\" \"}\n              <Link\n                to=\"https://www.fandango.com/policies/terms-and-policies\"\n                className=\"signup-footer-link small\"\n              >\n                Terms and Policies{\" \"}\n              </Link>\n            </p>\n          </footer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SignUpWindow;\n","import React, { useState } from \"react\";\nimport \"./styles/App.scss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport ListOfFilms from \"./pages/ListOfFilms\";\nimport FilmPage from \"./pages/FilmPage\";\nimport UserProfile from \"./pages/UserProfilePage\";\nimport LogInWindow from \"./components/LogIn\";\nimport SignUpWindow from \"./components/SignUp\";\n\nfunction App() {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isSignUpWindowVisible, setIsSignUpWindowVisible] = useState(false);\n\n  return (\n    <Router>\n      <div>\n        {isModalVisible && (\n          <LogInWindow setIsModalVisible={setIsModalVisible} />\n        )}\n        {isSignUpWindowVisible && (\n          <SignUpWindow setIsSignUpWindowVisible={setIsSignUpWindowVisible} />\n        )}\n      </div>\n\n      <Header\n        setIsModalVisible={setIsModalVisible}\n        setIsSignUpWindowVisible={setIsSignUpWindowVisible}\n      />\n      <div className=\"main-container\">\n        <Switch>\n          <Route path=\"/films/:id\">\n            <FilmPage />\n          </Route>\n\n          <Route path=\"/profile\">\n            <UserProfile />\n          </Route>\n\n          <Route path=\"/\">\n            <ListOfFilms />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <App />\n  </QueryClientProvider>,\n  rootElement\n);\n"],"sourceRoot":""}