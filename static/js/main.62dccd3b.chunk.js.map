{"version":3,"sources":["components/Button.tsx","components/Header.tsx","components/Votes.js","components/Spinner.js","apiServices.tsx","components/CardFilm.js","components/MySelect.js","pages/ListOfFilms.js","pages/FilmPage.tsx","components/LogIn.js","components/SignUp.js","App.tsx","index.tsx"],"names":["Button","children","className","classes","Header","setIsModalVisible","setIsSignUpWindowVisible","to","onClick","Votes","Spinner","isVisible","useState","color","override","css","size","baseUrl","loadFilms","genres","a","searchParams","URLSearchParams","genre","append","url","fetch","response","json","films","statusCode","status","data","getFilm","id","film","createUser","username","email","password","body","method","headers","JSON","stringify","userOrError","loginUser","formData","FormData","userToken","CardFilm","setFilms","isLoading","setIsLoading","useEffect","then","map","src","poster_url","alt","title","title_ru","release_year","country","director","actors","slice","actor","photo_url","options","value","label","MySelect","setSelectedGenres","type","for","disabled","isMulti","classNamePrefix","onChange","o","ListOfFilms","setGenres","FilmPage","useParams","useQuery","description","LogInWindow","values","setValues","setSubmitted","formError","setFormError","role","aria-modal","autoComplete","name","placeholder","e","target","preventDefault","res","detail","defaultFormErrors","SignUpWindow","formErrors","setFormErrors","newErrors","error","loc","msg","App","isModalVisible","isSignUpWindowVisible","LogIn","SignUp","path","queryClient","QueryClient","rootElement","document","getElementById","ReactDOM","render","QueryClientProvider","client"],"mappings":"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","file":"static/js/main.62dccd3b.chunk.js","sourcesContent":["import \"./Button.scss\";\n\nconst Button = ({\n  children,\n  className,\n}: {\n  children: any;\n  className: string;\n}) => {\n  const classes = `btn ${className}`;\n\n  return <button className={classes}>{children}</button>;\n};\n\nexport default Button;\n","import { Link } from \"react-router-dom\";\nimport { GiFilmSpool } from \"react-icons/gi\";\nimport Button from \"./Button\";\nimport \"./Header.scss\";\n\nconst Header = ({\n  setIsModalVisible,\n  setIsSignUpWindowVisible,\n}: {\n  setIsModalVisible: (val: boolean) => void;\n  setIsSignUpWindowVisible: (val: boolean) => void;\n}) => {\n  const handleShow = () => setIsModalVisible(true);\n  const handleShowSignUpWindow = () => setIsSignUpWindowVisible(true);\n\n  return (\n    <>\n      <div className=\"header-background-line\">\n        <div className=\"main-container\">\n          <header className=\"header-container\">\n            <div className=\"header-logo\">\n              <Link to=\"/\" className=\"navbar-logo\">\n                <GiFilmSpool className=\"navbar-icon\" />\n                <h4 className=\"navbar-title\">\n                  Rate<span className=\"highlight\">Film</span>\n                </h4>\n              </Link>\n            </div>\n\n            <nav className=\"main-nav\">\n              <ul className=\"nav-list\">\n                <li>\n                  <Link to=\"/\" className=\"btn-link\">\n                    <Button className=\"btn-primary\">List Of Films</Button>\n                  </Link>\n                </li>\n                <li>\n                  <button\n                    className=\"btn btn-primary\"\n                    onClick={handleShowSignUpWindow}\n                  >\n                    Sign Up\n                  </button>\n                </li>\n                <li>\n                  <button className=\"btn btn-primary\" onClick={handleShow}>\n                    Log In\n                  </button>\n                </li>\n              </ul>\n            </nav>\n          </header>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Header;\n","import React from \"react\";\n// import { FiThumbsUp } from \"react-icons/fi\";\nimport { MdThumbUp, MdThumbDown } from \"react-icons/md\";\nimport \"./Votes.scss\";\n\nconst Votes = () => {\n  return (\n    <>\n      <div className=\"rating\">\n        <div className=\"rate-box\">\n          <div className=\"rating-plus\">\n            <MdThumbUp />\n          </div>\n          <div className=\"rating-count\">\n            <p className=\"rate-num\">+7</p>\n          </div>\n          <div className=\"rating-minus\">\n            <MdThumbDown />\n          </div>\n        </div>\n      </div>\n    </>\n    // <div className=\"vote-container\">\n    //   <div className=\"vote-wrapper\">\n    //     <h3 className=\"percentage\">35%</h3>\n    //     <div className=\"icon-like\">\n    //       <FiThumbsUp />\n    //     </div>\n    //     <div className=\"count-votes\">\n    //       <p>170 votes</p>\n    //     </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default Votes;\n","import React, { useState } from \"react\";\nimport { css } from \"@emotion/react\";\nimport BeatLoader from \"react-spinners/BeatLoader\";\n\nconst Spinner = ({ isVisible }) => {\n  let [color, setColor] = useState(\"#f9c64e\");\n\n  const override = css`\n    flex: 0 0 auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-color: red;\n    height: 500px;\n  `;\n\n  return (\n    <div>\n      <BeatLoader css={override} size={30} color={color} />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import { Film } from \"./interfaces/film\";\nimport { User, UserCreateErrorResponse, AccessToken } from \"./interfaces/user\";\n\nconst baseUrl = \"https://rfilm.mswan.ru/api/v1\";\n\nexport interface ApiResponse<T> {\n  statusCode: number;\n  data: T;\n}\n\nexport const loadFilms = async (\n  genres: string[]\n): Promise<ApiResponse<Film[]>> => {\n  const searchParams = new URLSearchParams();\n\n  for (const genre of genres) {\n    searchParams.append(\"genre\", genre);\n  }\n\n  const url = `${baseUrl}/films/?${searchParams}`;\n\n  const response = await fetch(url);\n  const films = (await response.json()) as Film[];\n\n  return {\n    statusCode: response.status,\n    data: films,\n  };\n};\n\nexport const getFilm = async (id: string): Promise<ApiResponse<Film>> => {\n  const url = `${baseUrl}/films/${id}`;\n\n  const response = await fetch(url);\n  const film = (await response.json()) as Film;\n\n  return {\n    statusCode: response.status,\n    data: film,\n  };\n};\n\nexport const createUser = async (\n  username: string,\n  email: string,\n  password: string\n): Promise<ApiResponse<User | UserCreateErrorResponse>> => {\n  const body = {\n    username: username,\n    email: email,\n    password: password,\n  };\n\n  const url = `${baseUrl}/users/`;\n\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  });\n\n  const userOrError = await response.json();\n\n  return {\n    statusCode: response.status,\n    data: userOrError,\n  };\n};\n\nexport const loginUser = async (\n  username: string,\n  password: string\n): Promise<ApiResponse<AccessToken>> => {\n  const url = `${baseUrl}/users/token`;\n\n  let formData = new FormData();\n  formData.append(\"username\", username);\n  formData.append(\"password\", password);\n\n  const response = await fetch(url, {\n    body: formData,\n    method: \"post\",\n  });\n\n  const userToken = (await response.json()) as AccessToken;\n\n  return {\n    statusCode: response.status,\n    data: userToken,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Votes from \"./Votes\";\nimport Spinner from \"../components/Spinner\";\nimport { loadFilms } from \"../apiServices\";\nimport \"./CardFilm.scss\";\n\n// import { snakeToCamel } from \"../helpers\";\n\nconst CardFilm = ({ genres }) => {\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadFilms(genres).then((response) => {\n      setFilms(response.data);\n      setIsLoading(false);\n    });\n  }, [genres]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Spinner isVisible={isLoading} />\n      ) : (\n        <>\n          <div className=\"cards-film-container\">\n            {films.map((film) => (\n              <div>\n                <Link to={`/films/${film.id}`}>\n                  <div className=\"cards-film\" key={film.id}>\n                    <div className=\"cards-film-poster\">\n                      <img\n                        key={film.id}\n                        src={film.poster_url}\n                        alt=\"poster film\"\n                      />\n\n                      <Votes />\n                    </div>\n                    <div className=\"cards-film-content\">\n                      <div className=\"cards-film-description\">\n                        <h2 className=\"cards-film-title\">{film.title}</h2>\n                        <p className=\"cards-film-translate-name\">\n                          {film.title_ru}, {film.release_year}\n                        </p>\n                        <p className=\"cards-film-country\">\n                          {film.country}, {film.genre}\n                        </p>\n                        <p className=\"cards-film-director\">\n                          Directed by {\"\"}\n                          <span className=\"director\">{film.director}</span>\n                        </p>\n                      </div>\n\n                      <div>\n                        <p className=\"cards-film-name-title\">Actors:</p>\n                        <div className=\"cards-film-image-wrapper\">\n                          {film.actors.slice(0, 4).map((actor) => (\n                            <img\n                              key={actor.id}\n                              className=\"img-actors\"\n                              alt=\"actors\"\n                              src={actor.photo_url}\n                            />\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* <div>\n                      <Votes />\n                    </div> */}\n                  </div>\n                </Link>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\nexport default CardFilm;\n","import Select from \"react-select\";\nimport \"./MySelect.scss\";\n\nconst options = [\n  { value: \"action\", label: \"Action\" },\n  { value: \"mystery\", label: \"Mystery\" },\n  { value: \"thriller\", label: \"Thriller\" },\n  { value: \"comedy\", label: \"Comedy\" },\n  { value: \"family\", label: \"Family\" },\n  { value: \"history\", label: \"History\" },\n  { value: \"sci-fi\", label: \"Sci-Fi\" },\n  { value: \"war\", label: \"War\" },\n  { value: \"adventure\", label: \"Adventure\" },\n  { value: \"crime\", label: \"Crime\" },\n  { value: \"fantasy\", label: \"Fantasy\" },\n  { value: \"horror\", label: \"Horror\" },\n  { value: \"animation\", label: \"Animation\" },\n  { value: \"documentary\", label: \"Documentary\" },\n  { value: \"biography\", label: \"Biography\" },\n  { value: \"drama\", label: \"Drama\" },\n  { value: \"musical\", label: \"Musical\" },\n];\n\nconst MySelect = ({ setSelectedGenres }) => {\n  return (\n    <div className=\"select-container\">\n      <div className=\"wrapper-checkbox\">\n        <input type=\"checkbox\" id=\"checkbox1\" />\n        <label for=\"checkbox1\" disabled>\n          most popular\n        </label>\n      </div>\n      <Select\n        options={options}\n        isMulti\n        className=\"basic-multi-select\"\n        classNamePrefix=\"select\"\n        onChange={(options) => {\n          setSelectedGenres(options.map((o) => o.value));\n        }}\n      />\n    </div>\n  );\n};\n\nexport default MySelect;\n","import React, { useState } from \"react\";\nimport CardFilm from \"../components/CardFilm\";\n\nimport MySelect from \"../components/MySelect\";\n\nconst ListOfFilms = () => {\n  const [genres, setGenres] = useState([]);\n\n  return (\n    <>\n      <MySelect setSelectedGenres={setGenres} />\n      <CardFilm genres={genres} />\n    </>\n  );\n};\nexport default ListOfFilms;\n","import { useQuery } from \"react-query\";\nimport { useParams, Link } from \"react-router-dom\";\n\nimport { getFilm, ApiResponse } from \"../apiServices\";\nimport { Film } from \"../interfaces/film\";\nimport Button from \"../components/Button\";\nimport \"./FilmPage.scss\";\n\nconst FilmPage = () => {\n  const { id }: { id: any } = useParams();\n\n  const { isLoading, data } = useQuery<ApiResponse<Film>>(\"film\", () =>\n    getFilm(id)\n  );\n\n  return (\n    <div>\n      <Link to=\"/\">\n        <Button className=\"btn-back\">Back</Button>\n      </Link>\n      {!isLoading && data ? (\n        <div className=\"film-page-container\">\n          <div className=\"film-page-poster-wrapper\">\n            <img\n              className=\"film-page-poster\"\n              src={data.data.poster_url}\n              alt=\"film poster\"\n            />\n          </div>\n          <div className=\"film-page-content\">\n            <h2 className=\"film-page-title\">{data.data.title}</h2>\n            <h3>\n              {data.data.title_ru}, {data.data.release_year}\n            </h3>\n            <p className=\"film-page-country\">\n              {data.data.country}, {data.data.genre}\n            </p>\n            <p className=\"film-page-description\">{data.data.description}</p>\n\n            <div>\n              <p>Actors:</p>\n              <div className=\"film-page-image-wrapper\">\n                {data.data.actors.map((actor) => (\n                  <img\n                    key={actor.id}\n                    className=\"img-actors\"\n                    alt=\"actors\"\n                    src={actor.photo_url}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h2>Loading...</h2>\n      )}\n    </div>\n  );\n};\n\nexport default FilmPage;\n","import { useState } from \"react\";\n\nimport { loginUser } from \"../apiServices\";\nimport \"./ModalStyles.scss\";\n\nconst LogInWindow = ({ setIsModalVisible }) => {\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [submitted, setSubmitted] = useState(false);\n\n  const [formError, setFormError] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormError(\"\");\n\n    loginUser(values.username, values.password).then((res) => {\n      if (res.statusCode === 200) {\n        setIsModalVisible(false);\n      }\n\n      if (res.statusCode >= 400 && res.statusCode < 500) {\n        setFormError(res.data.detail);\n      }\n      setSubmitted(true);\n    });\n  };\n\n  const handleClose = () => setIsModalVisible(false);\n  return (\n    <>\n      <div className=\"modal-background\" role=\"dialog\" aria-modal=\"true\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title\">SIGN IN</h3>\n            <button className=\"modal-close-btn\" onClick={handleClose}></button>\n          </div>\n          <div className=\"form-body\">\n            <form>\n              <ul>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Username</label>\n                  <input\n                    className={`form-field ${\n                      formError ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"text\"\n                    autoComplete=\"on\"\n                    name=\"username\"\n                    placeholder=\"Jonny\"\n                    value={values.username}\n                    onChange={(e) =>\n                      setValues({ ...values, username: e.target.value })\n                    }\n                  />\n                </li>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    className={`form-field ${\n                      formError ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"password\"\n                    autoComplete=\"on\"\n                    name=\"password\"\n                    value={values.password}\n                    onChange={(e) =>\n                      setValues({ ...values, password: e.target.value })\n                    }\n                  />\n                </li>\n                <p>{formError}</p>\n                <li className=\"form-group\">\n                  <button\n                    className={`login-submit-btn ${\n                      !values.username || !values.password ? \"btn-disabled\" : \"\"\n                    }`}\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                    disabled={!values.username || !values.password}\n                  >\n                    LOG IN\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n          <footer className=\"modal-footer\">\n            <p className=\"modal-footer-paragraph\">\n              Don't have an account?\n              <button className=\"login-footer-btn\">SIGN UP HERE</button>\n            </p>\n          </footer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LogInWindow;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createUser } from \"../apiServices\";\nimport \"./ModalStyles.scss\";\n\nconst defaultFormErrors = {\n  username: null,\n  email: null,\n  password: null,\n};\n\nconst SignUpWindow = ({ setIsSignUpWindowVisible }) => {\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [submitted, setSubmitted] = useState(false);\n  const [formErrors, setFormErrors] = useState(defaultFormErrors);\n\n  const handleCloseSignUp = () => setIsSignUpWindowVisible(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFormErrors(defaultFormErrors);\n\n    createUser(values.username, values.email, values.password).then((res) => {\n      if (res.statusCode === 200) {\n        setIsSignUpWindowVisible(false);\n      }\n\n      if (res.statusCode >= 400 && res.statusCode < 500) {\n        const newErrors = {\n          ...defaultFormErrors,\n        };\n\n        for (const error of res.data.detail) {\n          const field = error.loc.slice(-1)[0];\n          newErrors[field] = error.msg;\n        }\n\n        setFormErrors(newErrors);\n      }\n      setSubmitted(true);\n    });\n  };\n\n  return (\n    <>\n      <div className=\"modal-background\" role=\"dialog\" aria-modal=\"true\">\n        <div className=\"modal-content height\">\n          <div className=\"modal-header\">\n            <h3 className=\"modal-title\">SIGN UP FOR RATE FILM</h3>\n            <button\n              className=\"modal-close-btn\"\n              onClick={handleCloseSignUp}\n            ></button>\n          </div>\n          <div className=\"form-body\">\n            <form>\n              <ul>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Your name on the website</label>\n                  <input\n                    className={`form-field ${\n                      formErrors.username ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"Jonny\"\n                    value={values.username}\n                    onChange={(e) =>\n                      setValues({ ...values, username: e.target.value })\n                    }\n                  />\n                  <p className=\"msg-error\">{formErrors.username}</p>\n                </li>\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Email address</label>\n                  <input\n                    className={`form-field ${\n                      formErrors.email ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"email\"\n                    autoComplete=\"on\"\n                    name=\"email\"\n                    placeholder=\"jonny@gmail.com\"\n                    value={values.email}\n                    onChange={(e) =>\n                      setValues({ ...values, email: e.target.value })\n                    }\n                  />\n                  <p className=\"msg-error\">{formErrors.email}</p>\n                </li>\n\n                <li className=\"form-group\">\n                  <label className=\"form-label\">Password</label>\n                  <input\n                    className={`form-field ${\n                      formErrors.password ? \"form-field-error\" : \"\"\n                    }`}\n                    type=\"password\"\n                    autoComplete=\"on\"\n                    name=\"password\"\n                    value={values.password}\n                    onChange={(e) =>\n                      setValues({ ...values, password: e.target.value })\n                    }\n                  />\n                  <p className=\"msg-error\">{formErrors.password}</p>\n                </li>\n\n                <li className=\"form-group\">\n                  <button\n                    className={`login-submit-btn ${\n                      !values.username || !values.email || !values.password\n                        ? \"btn-disabled\"\n                        : \"\"\n                    }`}\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                    disabled={\n                      !values.username || !values.email || !values.password\n                    }\n                  >\n                    CREATE YOUR ACCOUNT\n                  </button>\n                </li>\n              </ul>\n            </form>\n          </div>\n          <footer className=\"modal-footer\">\n            <p className=\"modal-footer-paragraph\">\n              Already have an account?\n              <button className=\"signup-footer-link\">LOG IN HERE</button>\n            </p>\n            <p className=\"policy-text\">\n              By creating an account, you agree to the{\" \"}\n              <Link\n                to=\"https://www.fandango.com/policies/privacy-policy\"\n                className=\"signup-footer-link small\"\n              >\n                Privacy Policy\n              </Link>{\" \"}\n              and the{\" \"}\n              <Link\n                to=\"https://www.fandango.com/policies/terms-and-policies\"\n                className=\"signup-footer-link small\"\n              >\n                Terms and Policies{\" \"}\n              </Link>\n            </p>\n          </footer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SignUpWindow;\n","import React, { useState } from \"react\";\nimport \"./styles/App.scss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport ListOfFilms from \"./pages/ListOfFilms\";\nimport FilmPage from \"./pages/FilmPage\";\nimport LogInWindow from \"./components/LogIn\";\nimport SignUpWindow from \"./components/SignUp\";\n\nfunction App() {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [isSignUpWindowVisible, setIsSignUpWindowVisible] = useState(false);\n\n  return (\n    <Router>\n      <div>\n        {isModalVisible && (\n          <LogInWindow setIsModalVisible={setIsModalVisible} />\n        )}\n        {isSignUpWindowVisible && (\n          <SignUpWindow setIsSignUpWindowVisible={setIsSignUpWindowVisible} />\n        )}\n      </div>\n\n      <Header\n        setIsModalVisible={setIsModalVisible}\n        setIsSignUpWindowVisible={setIsSignUpWindowVisible}\n      />\n      <div className=\"main-container\">\n        <Switch>\n          <Route path=\"/films/:id\">\n            <FilmPage />\n          </Route>\n\n          <Route path=\"/\">\n            <ListOfFilms />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <App />\n  </QueryClientProvider>,\n  rootElement\n);\n"],"sourceRoot":""}